<!DOCTYPE html><html lang="en"><head><meta charSet="utf-8"/><meta name="viewport" content="width=device-width, initial-scale=1"/><link rel="preload" href="/_next/static/media/30d74baa196fe88a-s.p.woff2" as="font" crossorigin="" type="font/woff2"/><link rel="preload" href="/_next/static/media/a34f9d1faa5f3315-s.p.woff2" as="font" crossorigin="" type="font/woff2"/><link rel="preload" as="image" href="/static/blog/mcp-introduction/api.png"/><link rel="preload" as="image" href="/static/blog/mcp-introduction/overview.png"/><link rel="preload" as="image" href="/static/blog/mcp-introduction/architecture.png"/><link rel="stylesheet" href="/_next/static/css/e3eb46c5556a9523.css" crossorigin="" data-precedence="next"/><link rel="stylesheet" href="/_next/static/css/1fbc182fae463ffb.css" crossorigin="" data-precedence="next"/><link rel="preload" as="script" fetchPriority="low" href="/_next/static/chunks/webpack-cc8b75c4764d9a64.js" crossorigin=""/><script src="/_next/static/chunks/fd9d1056-9ba992a3e39e92be.js" async="" crossorigin=""></script><script src="/_next/static/chunks/69-8145d88f693a8e35.js" async="" crossorigin=""></script><script src="/_next/static/chunks/main-app-f5c8d25c8479457f.js" async="" crossorigin=""></script><script src="/_next/static/chunks/258-9289ebf35b1e02b1.js" async=""></script><script src="/_next/static/chunks/749-5722e1b9889608f0.js" async=""></script><script src="/_next/static/chunks/788-2079b0ce75048abf.js" async=""></script><script src="/_next/static/chunks/app/layout-157f8f08e6dc305f.js" async=""></script><script src="/_next/static/chunks/app/%5Bslug%5D/page-487423f7cd3c1a71.js" async=""></script><meta name="theme-color" media="(prefers-color-scheme: light)" content="white"/><meta name="theme-color" media="(prefers-color-scheme: dark)" content="black"/><title>Model Context Protocol (MCP) an overview</title><meta name="description" content="Overview of the Model Context Protocol (MCP) how it works, what are MCP servers and clients, and how to use it."/><meta name="author" content="Philipp Schmid"/><meta property="og:title" content="Model Context Protocol (MCP) an overview"/><meta property="og:description" content="Overview of the Model Context Protocol (MCP) how it works, what are MCP servers and clients, and how to use it."/><meta property="og:url" content="https://www.philschmid.de/mcp-introduction"/><meta property="og:image" content="https://www.philschmid.de/static/blog/mcp-introduction/thumbnail.jpg"/><meta property="og:image:width" content="1200"/><meta property="og:image:height" content="630"/><meta property="og:image:alt" content="Model Context Protocol (MCP) an overview"/><meta property="og:type" content="article"/><meta property="article:published_time" content="2025-04-03"/><meta name="twitter:card" content="summary_large_image"/><meta name="twitter:title" content="Model Context Protocol (MCP) an overview"/><meta name="twitter:description" content="Overview of the Model Context Protocol (MCP) how it works, what are MCP servers and clients, and how to use it."/><meta name="twitter:image" content="https://www.philschmid.de/static/blog/mcp-introduction/thumbnail.jpg"/><link rel="icon" href="/favicon.ico" type="image/x-icon" sizes="256x256"/><meta name="next-size-adjust"/><script src="/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js" crossorigin="" noModule=""></script></head><body class="min-h-screen bg-background font-sans antialiased __variable_d65c78 __variable_d4b326"><script>!function(){try{var d=document.documentElement,c=d.classList;c.remove('light','dark');var e=localStorage.getItem('theme');if('system'===e||(!e&&true)){var t='(prefers-color-scheme: dark)',m=window.matchMedia(t);if(m.media!==t||m.matches){d.style.colorScheme = 'dark';c.add('dark')}else{d.style.colorScheme = 'light';c.add('light')}}else if(e){c.add(e|| '')}if(e==='light'||e==='dark')d.style.colorScheme=e}catch(e){}}()</script><div class="relative flex min-h-dvh flex-col bg-background"><header class="z-10 sticky top-0 md:w-full backdrop-blur supports-[backdrop-filter]:bg-background/30 md:px-4"><div class="md:mx-auto max-w-screen-xl w-full flex justify-between px-2 md:px-0 py-4"><a class="flex gap-2 items-center hover:underline" href="/"><img alt="logo" loading="lazy" width="24" height="24" decoding="async" data-nimg="1" style="color:transparent" srcSet="/_next/image?url=%2Fstatic%2Flogo.png&amp;w=32&amp;q=75 1x, /_next/image?url=%2Fstatic%2Flogo.png&amp;w=48&amp;q=75 2x" src="/_next/image?url=%2Fstatic%2Flogo.png&amp;w=48&amp;q=75"/><span class="font-medium tracking-wider uppercase">Philschmid</span></a><nav class="flex items-center space-x-4 lg:space-x-6"><div class="text-sm font-medium tracking-wider	uppercase cursor-pointer text-muted-foreground transition-colors hover:text-primary hidden sm:flex">Search<kbd class="ml-2 h-5 items-center gap-1 rounded bg-muted px-1.5 font-mono text-[10px] sm:flex"><span class="text-xs">⌘</span>k</kbd></div><a class="text-sm font-medium tracking-wider uppercase transition-colors hover:text-primary hidden sm:inline-block text-muted-foreground" href="/">Blog</a><a class="text-sm font-medium tracking-wider uppercase transition-colors hover:text-primary hidden sm:inline-block text-muted-foreground" href="/projects">Projects</a><a class="text-sm font-medium tracking-wider uppercase transition-colors hover:text-primary hidden sm:inline-block text-muted-foreground" href="/cloud-attention">Newsletter</a><a class="text-sm font-medium tracking-wider uppercase transition-colors hover:text-primary hidden sm:inline-block text-muted-foreground" href="/philipp-schmid">About Me</a></nav><button class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 py-2 w-10 px-0 sm:hidden" type="button" aria-haspopup="dialog" aria-expanded="false" aria-controls="radix-:Rdla:" data-state="closed"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-menu h-5 w-5"><line x1="4" x2="20" y1="12" y2="12"></line><line x1="4" x2="20" y1="6" y2="6"></line><line x1="4" x2="20" y1="18" y2="18"></line></svg><span class="sr-only">Toggle Menu</span></button></div></header><main class="flex-1"><div><script type="application/ld+json">{"@context":"https://schema.org","@type":"BlogPosting","name":"Model Context Protocol (MCP) an overview","headline":"Model Context Protocol (MCP) an overview","author":{"@type":"Person","name":"Philipp Schmid"},"creator":{"@type":"Person","name":"Philipp Schmid"},"publisher":{"@type":"Organization","name":"Philipp Schmid","logo":{"@type":"ImageObject","url":"https://www.philschmid.de/api/og?title=Philipp Schmid"}},"identifier":"mcp-introduction","url":"https://www.philschmid.de/mcp-introduction","image":"https://www.philschmid.de/static/blog/mcp-introduction/thumbnail.jpg","description":"Overview of the Model Context Protocol (MCP) how it works, what are MCP servers and clients, and how to use it.","articleBody":"\nThe [Model Context Protocol](https://modelcontextprotocol.io/introduction) (MCP) is an open standard [introduced by Anthropic](https://www.anthropic.com/news/model-context-protocol) with the goal to standardize how AI applications (chatbots, IDE assistants, or custom agents) connect with external tools, data sources, and systems. \n\n![api](/static/blog/mcp-introduction/api.png)\n\nThink of it like USB for AI integrations. Before standards like USB, connecting peripherals required a mess of different ports and custom drivers. Similarly, integrating AI applications with external tools and systems is/was an \"M×N problem\".   \nIf you have M different AI applications (Chat, RAG 1, custom agents, etc.) and N different tools/systems (GitHub, Slack, Asana, databases, etc.), you might need to build M×N different integrations. This leads to duplicated effort across teams, inconsistent implementations. \n\nMCP aims to simplify this by providing a common API and transforming this into an \"M+N problem\". Tool creators build N MCP servers (one for each system), while application developers build M MCP clients (one for each AI application). MCP defines a client-server architecture where:\n\n- **Hosts:** Applications the user interacts with (e.g., Claude Desktop, an IDE like Cursor, a custom agent).  \n- **Clients:** Live within the Host application and manage the connection to one specific MCP server. Maintain a 1:1 to connection.   \n- **Servers:** External programs that expose Tools, Resources and Prompts via standard API to the AI model via the client.\n\nThe current components of MCP servers include:\n\n1. **Tools  (Model-controlled):** These are functions (tools) that LLMs can call to perform specific actions, e.g. weather API, basically function calling  \n2. **Resources  (Application-controlled):** These are data sources that LLMs can access, similar to GET endpoints in a REST API. Resources provide data without performing significant computation, no side effects. Part of the context/request  \n3. **Prompts (User-controlled):** These are pre-defined templates to use tools or resources in the most optimal way. Selected before running inference\n\n![overview](/static/blog/mcp-introduction/overview.png)\n\n## How does MCP work?\n\nMCP operates on the client-server model described earlier. Here’s a simplified flow:\n\n![architecture](/static/blog/mcp-introduction/architecture.png)\n\n1. **Initialization:** When a Host application starts it creates N MCP Clients, which exchange information about capabilities and protocol versions via a handshake.  \n2. **Discovery:** Clients requests what capabilities (Tools, Resources, Prompts) the server offers. The Server responds with a list and descriptions.  \n3. **Context Provision:** The Host application can now make resources and prompts available to the user or parses the tools into a LLM compatible format, e.g. JSON Function calling  \n4. **Invocation:** If the LLM determines it needs to use a Tool (e.g., based on the user's request like \"What are the open issues in the 'X' repo?\"), the Host directs the Client to send an invocation request to the appropriate Server.  \n5. **Execution:** The Server receives the request (e.g., fetch\\_github\\_issues with repo 'X'), executes the underlying logic (calls the GitHub API), and gets the result.  \n6. **Response:** The Server sends the result back to the Client.  \n7. **Completion:** The Client relays the result to the Host, which incorporates it into the LLM's context, allowing the LLM to generate a final response for the user based on the fresh, external information.\n\n### MCP servers\n\nMCP Servers are the bridge/API between the MCP world and the specific functionality of an external system (an API, a database, local files, etc.). They are essentially wrappers that expose these external capabilities according to the MCP specification.\n\nServers  can be built in various languages (Python, TypeScript, Java, Rust, etc.) as long as they can communicate over the supported transports. Servers communicate with clients primarily via two methods:\n\n- **stdio (Standard Input/Output):** Used when Client and Server run on the same machines. This is simple and effective for local integrations (e.g., accessing local files or running a local script).  \n- **HTTP via SSE (Server-Sent Events):** The Client connects to the Server via HTTP. After an initial setup, the Server can push messages (events) to the Client over a persistent connection using the SSE standard. \n\nExample of how to build an MCP server with Python and [FastMCP](https://github.com/jlowin/fastmcp/tree/main): \n\n```py\nfrom fastmcp import FastMCP\n\n# Create an MCP server\nmcp = FastMCP(\"Demo\")\n\n# Add a tool, will be converted into JSON spec for function calling\n@mcp.tool()\ndef add(a: int, b: int) -> int:\n    \"\"\"Add two numbers\"\"\"\n    return a + b\n\n# Add a data resource, e.g. displayed on new chats\n@mcp.resource(\"greeting://{name}\")\ndef get_greeting(name: str) -> str:\n    \"\"\"Get a personalized greeting\"\"\"\n    return f\"Hello, {name}!\"\n\n# Specific prompt templates for better use\n@mcp.prompt()\ndef review_code(code: str) -> str:\n    return f\"Please review this code:\\n\\n{code}\"\n```\n\nList of pre-build and community build MCP servers: \n\n- [https://github.com/punkpeye/awesome-mcp-servers](https://github.com/punkpeye/awesome-mcp-servers)   \n- [https://github.com/modelcontextprotocol/servers](https://github.com/modelcontextprotocol/servers)   \n- [https://mcp.composio.dev/](https://mcp.composio.dev/) \n\n### MCP Clients\n\nMCP Clients are part of Host applications (the IDE, chatbot, etc.) that manage the communication with a specific MCP Server. \n\n- **Role:** Handle connection management, capability discovery, request forwarding, and response handling according to the MCP spec.  \n- **Examples of Hosts/Clients:**  \n  - UI Apps: Claude Desktop, Microsoft Copilot Studio, LibreChat, Claude Code  \n  - IDEs: Cursor, Windsurf, Continue, Zed, Cline  \n  - Custom Agents (Python/TypeScript):  \n    - Firebase Genkit  \n    - LangGraph  \n    - OpenAI agents sdk  \n    - …. \n\nExample of how to build an MCP client with Python and mcp. \n\n```py\nfrom mcp import ClientSession, StdioServerParameters, types\nfrom mcp.client.stdio import stdio_client\n\n# Commands for running/connecting to MCP Server\nserver_params = StdioServerParameters(\n    command=\"python\",  # Executable\n    args=[\"example_server.py\"],  # Optional command line arguments\n    env=None,  # Optional environment variables\n)\n\nasync with stdio_client(server_params) as (read, write):\n    async with ClientSession(\n        read, write, sampling_callback=handle_sampling_message\n    ) as session:\n        # Initialize the connection\n        await session.initialize()\n\n        # List available prompts\n        prompts = await session.list_prompts()\n\n        # Get a prompt\n        prompt = await session.get_prompt(\n            \"example-prompt\", arguments={\"arg1\": \"value\"}\n        )\n\n        # List available resources\n        resources = await session.list_resources()\n\n        # List available tools\n        tools = await session.list_tools()\n\n        # Read a resource\n        content, mime_type = await session.read_resource(\"file://some/path\")\n\n        # Call a tool\n        result = await session.call_tool(\"tool-name\", arguments={\"arg1\": \"value\"})\n\n```\n\n## Why is there so much hype? Did MCP win?\n\nWhile Anthropic announced MCP in late 2024, its momentum significantly accelerated in early 2025\\. This isn't just random hype; several factors converged:\n\n- **\"AI-Native\"** while older standards like OpenAPI, GraphQL, or SOAP exist for API interaction, MCP was designed specifically for the needs of modern AI agents. MCP refines patterns seen in agent development:  \n  - Tools (Model-controlled): Actions the AI decides to take.  \n  - Resources (Application-controlled): Context provided to the AI.  \n  - Prompts (User-controlled): Specific user-invoked interactions.  \n- **\"Open Standard\" with a Big Backer:** Any \"open standard” should have a spec, and [MCP has a VERY good spec](https://spec.modelcontextprotocol.io/specification/2024-11-05/). The spec alone defeats a lot of contenders, who do not provide such detailed specs.  \n- **Built on Proven Foundations:** Instead of re-inventing everything from scratch, Anthropic adapted from Language Server Protocol (LSP), e.g. [JSON-RPC 2.0](https://www.jsonrpc.org/)  \n- **Strong Initial Ecosystem & Dogfooding:** MCP didn't launch as just a spec. Anthropic \"dogfooded\" it extensively and released it with a comprehensive initial set:  \n  - Client: Claude Desktop.  \n  - Servers: Numerous reference implementations (filesystem, git, Slack, etc.).  \n  - Tooling: MCP Inspector for testing, great documentation  \n  - SDKs: Python and TypeScript libraries, now Java, Kotlin C\\#   \n- **Network Effects:** The open nature fostered a community. Tools like Cursor and Windsurf integrated MCP. Companies like Composio provided pre-built servers for hundreds of integrations. OpenAI announced support for MCP. Developers built thousands of community MCP servers (GitHub, Slack, databases, Docker, etc.). \n\n## Practical Example with Gemini and Python uSDK\n\n```py\nfrom typing import List\nfrom google import genai\nfrom google.genai import types\nfrom mcp import ClientSession, StdioServerParameters\nfrom mcp.client.stdio import stdio_client\nimport os\n\nclient = genai.Client(api_key=os.getenv(\"GEMINI_API_KEY\"))\nmodel = \"gemini-2.0-flash\"\n\n# Create server parameters for stdio connection\nserver_params = StdioServerParameters(\n    command=\"npx\",  # Executable\n    args=[\n        \"-y\",\n        \"@openbnb/mcp-server-airbnb\",\n    ],  # Optional command line arguments\n    env=None,  # Optional environment variables\n)\n\nasync def agent_loop(prompt: str, client: genai.Client, session: ClientSession):\n    contents = [types.Content(role=\"user\", parts=[types.Part(text=prompt)])]\n    # Initialize the connection\n    await session.initialize()\n    \n    # --- 1. Get Tools from Session and convert to Gemini Tool objects ---\n    mcp_tools = await session.list_tools()\n    tools = types.Tool(function_declarations=[\n        {\n            \"name\": tool.name,\n            \"description\": tool.description,\n            \"parameters\": tool.inputSchema,\n        }\n        for tool in mcp_tools.tools\n    ])\n    \n    # --- 2. Initial Request with user prompt and function declarations ---\n    response = await client.aio.models.generate_content(\n        model=model,  # Or your preferred model supporting function calling\n        contents=contents,\n        config=types.GenerateContentConfig(\n            temperature=0,\n            tools=[tools],\n        ),  # Example other config\n    )\n    \n    # --- 3. Append initial response to contents ---\n    contents.append(response.candidates[0].content)\n\n    # --- 4. Tool Calling Loop ---            \n    turn_count = 0\n    max_tool_turns = 5\n    while response.function_calls and turn_count < max_tool_turns:\n        turn_count += 1\n        tool_response_parts: List[types.Part] = []\n\n        # --- 4.1 Process all function calls in order and return in this turn ---\n        for fc_part in response.function_calls:\n            tool_name = fc_part.name\n            args = fc_part.args or {}  # Ensure args is a dict\n            print(f\"Attempting to call MCP tool: '{tool_name}' with args: {args}\")\n\n            tool_response: dict\n            try:\n                # Call the session's tool executor\n                tool_result = await session.call_tool(tool_name, args)\n                print(f\"MCP tool '{tool_name}' executed successfully.\")\n                if tool_result.isError:\n                    tool_response = {\"error\": tool_result.content[0].text}\n                else:\n                    tool_response = {\"result\": tool_result.content[0].text}\n            except Exception as e:\n                tool_response = {\"error\":  f\"Tool execution failed: {type(e).__name__}: {e}\"}\n            \n            # Prepare FunctionResponse Part\n            tool_response_parts.append(\n                types.Part.from_function_response(\n                    name=tool_name, response=tool_response\n                )\n            )\n\n        # --- 4.2 Add the tool response(s) to history ---\n        contents.append(types.Content(role=\"user\", parts=tool_response_parts))\n        print(f\"Added {len(tool_response_parts)} tool response parts to history.\")\n\n        # --- 4.3 Make the next call to the model with updated history ---\n        print(\"Making subsequent API call with tool responses...\")\n        response = await client.aio.models.generate_content(\n            model=model,\n            contents=contents,  # Send updated history\n            config=types.GenerateContentConfig(\n                temperature=1.0,\n                tools=[tools],\n            ),  # Keep sending same config\n        )\n        contents.append(response.candidates[0].content)\n\n    if turn_count >= max_tool_turns and response.function_calls:\n        print(f\"Maximum tool turns ({max_tool_turns}) reached. Exiting loop.\")\n\n    print(\"MCP tool calling loop finished. Returning final response.\")\n    # --- 5. Return Final Response ---\n    return response\n        \nasync def run():\n    async with stdio_client(server_params) as (read, write):\n        async with ClientSession(\n            read,\n            write,\n        ) as session:\n            # Test prompt\n            prompt = \"I want to book an apartment in Paris for 2 nights. 03/28 - 03/30\"\n            print(f\"Running agent loop with prompt: {prompt}\")\n            # Run agent loop\n            res = await agent_loop(prompt, client, session)\n            return res\nres = await run()\nprint(res.text)\n```\n\n## What about Security, Updates, Authentication?\n\nMCP is a living protocol. The specification is actively maintained on GitHub, last update from 03/26 improves security, scalability, and usability.  \n\n- **Authentication & Security (OAuth 2.1):** The protocol now mandates the OAuth 2.1 framework for authenticating remote HTTP servers  \n- **Improved Transport & Efficiency:** The previous HTTP+SSE transport will be replaced with a more flexible Streamable HTTP transport and support for JSON-RPC batching.  \n- **Richer Context & Control:** New tool annotations provide more metadata about a tool's behavior (e.g., read-only vs. destructive)\n\n## Acknowledgements\n\nThis overview was compiled with the help of deep and manual research, drawing inspiration and information from several excellent resources, including:\n\n*   [What Is MCP, and Why Is Everyone – Suddenly!– Talking About It?](https://huggingface.co/blog/Kseniase/mcp)\n*   [What is MCP](https://python.useinstructor.com/blog/2025/03/27/understanding-model-context-protocol-mcp/#conclusion)\n*   [I gave Claude root access to my server... Model Context Protocol explained](https://www.youtube.com/watch?v=HyzlYwjoXOQ)\n*   [Why MCP Won](https://www.latent.space/p/why-mcp-won)\n*   [Building Agents with Model Context Protocol - Full Workshop with Mahesh Murag of Anthropic](https://www.youtube.com/watch?v=kQmXtrmQ5Zg)\n\n---\n\nIf you have any questions, feedback, or ideas, please dm me on [X](https://x.com/_philschmid) or [LinkedIn](https://www.linkedin.com/in/philipp-schmid-a6a2bb196/). I am excited to hear about how you are experimenting and pushing the boundaries of AI agents.\n","datePublished":"2025-04-03","dateModified":"2025-04-03","dateCreated":"2025-04-03"}</script><article class="lg:py-6 lg:mt-20 mt-10 mx-4 md:mx-auto max-w-7xl"><div class="prose dark:prose-invert max-w-5xl md:max-w-4xl text-left md:mx-auto px-4 "><h1 class="text-4xl font-light w-full font-serif">Model Context Protocol (MCP) an overview</h1></div><div class="py-2 mx-auto xl:mx-0 xl:grid prose dark:prose-invert xl:grid-cols-[150px_1fr_250px] xl:py-10 xl:gap-20"><div class="flex xl:flex-col mx-auto gap-2 xl:gap-0 text-sm mt-[1.25rem]"><span> <!-- -->April 3, 2025</span><span>9<!-- --> minute read</span></div><div class="lg:w-[40em]"><p>The <a target="_blank" rel="noopener noreferrer" href="https://modelcontextprotocol.io/introduction">Model Context Protocol</a> (MCP) is an open standard <a target="_blank" rel="noopener noreferrer" href="https://www.anthropic.com/news/model-context-protocol">introduced by Anthropic</a> with the goal to standardize how AI applications (chatbots, IDE assistants, or custom agents) connect with external tools, data sources, and systems.</p>
<p><img src="/static/blog/mcp-introduction/api.png" alt="api"/></p>
<p>Think of it like USB for AI integrations. Before standards like USB, connecting peripherals required a mess of different ports and custom drivers. Similarly, integrating AI applications with external tools and systems is/was an &quot;M×N problem&quot;.<br/>
<!-- -->If you have M different AI applications (Chat, RAG 1, custom agents, etc.) and N different tools/systems (GitHub, Slack, Asana, databases, etc.), you might need to build M×N different integrations. This leads to duplicated effort across teams, inconsistent implementations.</p>
<p>MCP aims to simplify this by providing a common API and transforming this into an &quot;M+N problem&quot;. Tool creators build N MCP servers (one for each system), while application developers build M MCP clients (one for each AI application). MCP defines a client-server architecture where:</p>
<ul>
<li><strong>Hosts:</strong> Applications the user interacts with (e.g., Claude Desktop, an IDE like Cursor, a custom agent).</li>
<li><strong>Clients:</strong> Live within the Host application and manage the connection to one specific MCP server. Maintain a 1:1 to connection.</li>
<li><strong>Servers:</strong> External programs that expose Tools, Resources and Prompts via standard API to the AI model via the client.</li>
</ul>
<p>The current components of MCP servers include:</p>
<ol>
<li><strong>Tools  (Model-controlled):</strong> These are functions (tools) that LLMs can call to perform specific actions, e.g. weather API, basically function calling</li>
<li><strong>Resources  (Application-controlled):</strong> These are data sources that LLMs can access, similar to GET endpoints in a REST API. Resources provide data without performing significant computation, no side effects. Part of the context/request</li>
<li><strong>Prompts (User-controlled):</strong> These are pre-defined templates to use tools or resources in the most optimal way. Selected before running inference</li>
</ol>
<p><img src="/static/blog/mcp-introduction/overview.png" alt="overview"/></p>
<h2 id="how-does-mcp-work"><a href="#how-does-mcp-work" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>How does MCP work?</h2>
<p>MCP operates on the client-server model described earlier. Here’s a simplified flow:</p>
<p><img src="/static/blog/mcp-introduction/architecture.png" alt="architecture"/></p>
<ol>
<li><strong>Initialization:</strong> When a Host application starts it creates N MCP Clients, which exchange information about capabilities and protocol versions via a handshake.</li>
<li><strong>Discovery:</strong> Clients requests what capabilities (Tools, Resources, Prompts) the server offers. The Server responds with a list and descriptions.</li>
<li><strong>Context Provision:</strong> The Host application can now make resources and prompts available to the user or parses the tools into a LLM compatible format, e.g. JSON Function calling</li>
<li><strong>Invocation:</strong> If the LLM determines it needs to use a Tool (e.g., based on the user&#x27;s request like &quot;What are the open issues in the &#x27;X&#x27; repo?&quot;), the Host directs the Client to send an invocation request to the appropriate Server.</li>
<li><strong>Execution:</strong> The Server receives the request (e.g., fetch_github_issues with repo &#x27;X&#x27;), executes the underlying logic (calls the GitHub API), and gets the result.</li>
<li><strong>Response:</strong> The Server sends the result back to the Client.</li>
<li><strong>Completion:</strong> The Client relays the result to the Host, which incorporates it into the LLM&#x27;s context, allowing the LLM to generate a final response for the user based on the fresh, external information.</li>
</ol>
<h3 id="mcp-servers"><a href="#mcp-servers" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>MCP servers</h3>
<p>MCP Servers are the bridge/API between the MCP world and the specific functionality of an external system (an API, a database, local files, etc.). They are essentially wrappers that expose these external capabilities according to the MCP specification.</p>
<p>Servers  can be built in various languages (Python, TypeScript, Java, Rust, etc.) as long as they can communicate over the supported transports. Servers communicate with clients primarily via two methods:</p>
<ul>
<li><strong>stdio (Standard Input/Output):</strong> Used when Client and Server run on the same machines. This is simple and effective for local integrations (e.g., accessing local files or running a local script).</li>
<li><strong>HTTP via SSE (Server-Sent Events):</strong> The Client connects to the Server via HTTP. After an initial setup, the Server can push messages (events) to the Client over a persistent connection using the SSE standard.</li>
</ul>
<p>Example of how to build an MCP server with Python and <a target="_blank" rel="noopener noreferrer" href="https://github.com/jlowin/fastmcp/tree/main">FastMCP</a>:</p>
<figure data-rehype-pretty-code-figure=""><div class="relative  border-1 border-gray-900 dark:border rounded-lg m-0 "><button class="inline-flex items-center justify-center whitespace-nowrap text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-9 rounded-md px-3 duration-100 text-white absolute right-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-copy w-3 h-3"><rect width="14" height="14" x="8" y="8" rx="2" ry="2"></rect><path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"></path></svg></button><pre class="m-0 bg-black text-xs"><code data-language="py" data-theme="github-dark github-light" style="display:grid"><span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">from</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> fastmcp </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> FastMCP</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D"># Create an MCP server</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">mcp </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> FastMCP(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;Demo&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D"># Add a tool, will be converted into JSON spec for function calling</span></span>
<span data-line=""><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">@mcp.tool</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">()</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">def</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> add</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(a: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">int</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">, b: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">int</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">) -&gt; </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">int</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">:</span></span>
<span data-line=""><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">    &quot;&quot;&quot;Add two numbers&quot;&quot;&quot;</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> a </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">+</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> b</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D"># Add a data resource, e.g. displayed on new chats</span></span>
<span data-line=""><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">@mcp.resource</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;greeting://</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">{name}</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">def</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> get_greeting</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(name: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">str</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">) -&gt; </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">str</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">:</span></span>
<span data-line=""><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">    &quot;&quot;&quot;Get a personalized greeting&quot;&quot;&quot;</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    return</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> f</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;Hello, </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">{</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">name</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">}</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">!&quot;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D"># Specific prompt templates for better use</span></span>
<span data-line=""><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">@mcp.prompt</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">()</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">def</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> review_code</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(code: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">str</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">) -&gt; </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">str</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">:</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    return</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> f</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;Please review this code:</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">\n\n{</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">code</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">}</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;</span></span></code></pre></div></figure>
<p>List of pre-build and community build MCP servers:</p>
<ul>
<li><a target="_blank" rel="noopener noreferrer" href="https://github.com/punkpeye/awesome-mcp-servers">https://github.com/punkpeye/awesome-mcp-servers</a></li>
<li><a target="_blank" rel="noopener noreferrer" href="https://github.com/modelcontextprotocol/servers">https://github.com/modelcontextprotocol/servers</a></li>
<li><a target="_blank" rel="noopener noreferrer" href="https://mcp.composio.dev/">https://mcp.composio.dev/</a></li>
</ul>
<h3 id="mcp-clients"><a href="#mcp-clients" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>MCP Clients</h3>
<p>MCP Clients are part of Host applications (the IDE, chatbot, etc.) that manage the communication with a specific MCP Server.</p>
<ul>
<li><strong>Role:</strong> Handle connection management, capability discovery, request forwarding, and response handling according to the MCP spec.</li>
<li><strong>Examples of Hosts/Clients:</strong>
<ul>
<li>UI Apps: Claude Desktop, Microsoft Copilot Studio, LibreChat, Claude Code</li>
<li>IDEs: Cursor, Windsurf, Continue, Zed, Cline</li>
<li>Custom Agents (Python/TypeScript):<!-- -->
<ul>
<li>Firebase Genkit</li>
<li>LangGraph</li>
<li>OpenAI agents sdk</li>
<li>….</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Example of how to build an MCP client with Python and mcp.</p>
<figure data-rehype-pretty-code-figure=""><div class="relative  border-1 border-gray-900 dark:border rounded-lg m-0 "><button class="inline-flex items-center justify-center whitespace-nowrap text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-9 rounded-md px-3 duration-100 text-white absolute right-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-copy w-3 h-3"><rect width="14" height="14" x="8" y="8" rx="2" ry="2"></rect><path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"></path></svg></button><pre class="m-0 bg-black text-xs"><code data-language="py" data-theme="github-dark github-light" style="display:grid"><span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">from</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> mcp </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> ClientSession, StdioServerParameters, types</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">from</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> mcp.client.stdio </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> stdio_client</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D"># Commands for running/connecting to MCP Server</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">server_params </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> StdioServerParameters(</span></span>
<span data-line=""><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">    command</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;python&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">,  </span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D"># Executable</span></span>
<span data-line=""><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">    args</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">[</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;example_server.py&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">],  </span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D"># Optional command line arguments</span></span>
<span data-line=""><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">    env</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">None</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">,  </span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D"># Optional environment variables</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">async</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> with</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> stdio_client(server_params) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">as</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> (read, write):</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    async</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> with</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> ClientSession(</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        read, write, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">sampling_callback</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">handle_sampling_message</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    ) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">as</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> session:</span></span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">        # Initialize the connection</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        await</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> session.initialize()</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">        # List available prompts</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        prompts </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> await</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> session.list_prompts()</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">        # Get a prompt</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        prompt </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> await</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> session.get_prompt(</span></span>
<span data-line=""><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">            &quot;example-prompt&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">arguments</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">{</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;arg1&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;value&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">}</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        )</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">        # List available resources</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        resources </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> await</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> session.list_resources()</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">        # List available tools</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        tools </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> await</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> session.list_tools()</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">        # Read a resource</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        content, mime_type </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> await</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> session.read_resource(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;file://some/path&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">        # Call a tool</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        result </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> await</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> session.call_tool(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;tool-name&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">arguments</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">{</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;arg1&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;value&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">})</span></span>
<span data-line=""> </span></code></pre></div></figure>
<h2 id="why-is-there-so-much-hype-did-mcp-win"><a href="#why-is-there-so-much-hype-did-mcp-win" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>Why is there so much hype? Did MCP win?</h2>
<p>While Anthropic announced MCP in late 2024, its momentum significantly accelerated in early 2025. This isn&#x27;t just random hype; several factors converged:</p>
<ul>
<li><strong>&quot;AI-Native&quot;</strong> while older standards like OpenAPI, GraphQL, or SOAP exist for API interaction, MCP was designed specifically for the needs of modern AI agents. MCP refines patterns seen in agent development:<!-- -->
<ul>
<li>Tools (Model-controlled): Actions the AI decides to take.</li>
<li>Resources (Application-controlled): Context provided to the AI.</li>
<li>Prompts (User-controlled): Specific user-invoked interactions.</li>
</ul>
</li>
<li><strong>&quot;Open Standard&quot; with a Big Backer:</strong> Any &quot;open standard” should have a spec, and <a target="_blank" rel="noopener noreferrer" href="https://spec.modelcontextprotocol.io/specification/2024-11-05/">MCP has a VERY good spec</a>. The spec alone defeats a lot of contenders, who do not provide such detailed specs.</li>
<li><strong>Built on Proven Foundations:</strong> Instead of re-inventing everything from scratch, Anthropic adapted from Language Server Protocol (LSP), e.g. <a target="_blank" rel="noopener noreferrer" href="https://www.jsonrpc.org/">JSON-RPC 2.0</a></li>
<li><strong>Strong Initial Ecosystem &amp; Dogfooding:</strong> MCP didn&#x27;t launch as just a spec. Anthropic &quot;dogfooded&quot; it extensively and released it with a comprehensive initial set:<!-- -->
<ul>
<li>Client: Claude Desktop.</li>
<li>Servers: Numerous reference implementations (filesystem, git, Slack, etc.).</li>
<li>Tooling: MCP Inspector for testing, great documentation</li>
<li>SDKs: Python and TypeScript libraries, now Java, Kotlin C#</li>
</ul>
</li>
<li><strong>Network Effects:</strong> The open nature fostered a community. Tools like Cursor and Windsurf integrated MCP. Companies like Composio provided pre-built servers for hundreds of integrations. OpenAI announced support for MCP. Developers built thousands of community MCP servers (GitHub, Slack, databases, Docker, etc.).</li>
</ul>
<h2 id="practical-example-with-gemini-and-python-usdk"><a href="#practical-example-with-gemini-and-python-usdk" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>Practical Example with Gemini and Python uSDK</h2>
<figure data-rehype-pretty-code-figure=""><div class="relative  border-1 border-gray-900 dark:border rounded-lg m-0 "><button class="inline-flex items-center justify-center whitespace-nowrap text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-9 rounded-md px-3 duration-100 text-white absolute right-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-copy w-3 h-3"><rect width="14" height="14" x="8" y="8" rx="2" ry="2"></rect><path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"></path></svg></button><pre class="m-0 bg-black text-xs"><code data-language="py" data-theme="github-dark github-light" style="display:grid"><span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">from</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> typing </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> List</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">from</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> google </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> genai</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">from</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> google.genai </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> types</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">from</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> mcp </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> ClientSession, StdioServerParameters</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">from</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> mcp.client.stdio </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> stdio_client</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> os</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">client </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> genai.Client(</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">api_key</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">os.getenv(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;GEMINI_API_KEY&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">))</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">model </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62"> &quot;gemini-2.0-flash&quot;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D"># Create server parameters for stdio connection</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">server_params </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> StdioServerParameters(</span></span>
<span data-line=""><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">    command</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;npx&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">,  </span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D"># Executable</span></span>
<span data-line=""><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">    args</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">[</span></span>
<span data-line=""><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">        &quot;-y&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">,</span></span>
<span data-line=""><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">        &quot;@openbnb/mcp-server-airbnb&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">,</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    ],  </span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D"># Optional command line arguments</span></span>
<span data-line=""><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">    env</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">None</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">,  </span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D"># Optional environment variables</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">async</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> def</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> agent_loop</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(prompt: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">str</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">, client: genai.Client, session: ClientSession):</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    contents </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> [types.Content(</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">role</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;user&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">parts</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">[types.Part(</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">text</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">prompt)])]</span></span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">    # Initialize the connection</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    await</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> session.initialize()</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    </span></span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">    # --- 1. Get Tools from Session and convert to Gemini Tool objects ---</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    mcp_tools </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> await</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> session.list_tools()</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    tools </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> types.Tool(</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">function_declarations</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">[</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        {</span></span>
<span data-line=""><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">            &quot;name&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">: tool.name,</span></span>
<span data-line=""><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">            &quot;description&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">: tool.description,</span></span>
<span data-line=""><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">            &quot;parameters&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">: tool.inputSchema,</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        }</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        for</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> tool </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">in</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> mcp_tools.tools</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    ])</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    </span></span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">    # --- 2. Initial Request with user prompt and function declarations ---</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    response </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> await</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> client.aio.models.generate_content(</span></span>
<span data-line=""><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">        model</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">model,  </span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D"># Or your preferred model supporting function calling</span></span>
<span data-line=""><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">        contents</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">contents,</span></span>
<span data-line=""><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">        config</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">types.GenerateContentConfig(</span></span>
<span data-line=""><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">            temperature</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">,</span></span>
<span data-line=""><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">            tools</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">[tools],</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        ),  </span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D"># Example other config</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    )</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    </span></span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">    # --- 3. Append initial response to contents ---</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    contents.append(response.candidates[</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">].content)</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">    # --- 4. Tool Calling Loop ---            </span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    turn_count </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5"> 0</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    max_tool_turns </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5"> 5</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    while</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> response.function_calls </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">and</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> turn_count </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">&lt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> max_tool_turns:</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        turn_count </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">+=</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5"> 1</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        tool_response_parts: List[types.Part] </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> []</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">        # --- 4.1 Process all function calls in order and return in this turn ---</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        for</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> fc_part </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">in</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> response.function_calls:</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            tool_name </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> fc_part.name</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            args </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> fc_part.args </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">or</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> {}  </span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D"># Ensure args is a dict</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">            print</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">f</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;Attempting to call MCP tool: &#x27;</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">{</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">tool_name</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">}</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&#x27; with args: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">{</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">args</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">}</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            tool_response: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">dict</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">            try</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">:</span></span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">                # Call the session&#x27;s tool executor</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                tool_result </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> await</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> session.call_tool(tool_name, args)</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">                print</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">f</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;MCP tool &#x27;</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">{</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">tool_name</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">}</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&#x27; executed successfully.&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">                if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> tool_result.isError:</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    tool_response </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> {</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;error&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">: tool_result.content[</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">].text}</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">                else</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">:</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    tool_response </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> {</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;result&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">: tool_result.content[</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">].text}</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">            except</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5"> Exception</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> as</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> e:</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                tool_response </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> {</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;error&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">:  </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">f</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;Tool execution failed: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">{type</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(e).</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">__name__}</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">{</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">e</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">}</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">}</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            </span></span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">            # Prepare FunctionResponse Part</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            tool_response_parts.append(</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                types.Part.from_function_response(</span></span>
<span data-line=""><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">                    name</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">tool_name, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">response</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">tool_response</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                )</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            )</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">        # --- 4.2 Add the tool response(s) to history ---</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        contents.append(types.Content(</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">role</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;user&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">parts</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">tool_response_parts))</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">        print</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">f</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;Added </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">{len</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(tool_response_parts)</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">}</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62"> tool response parts to history.&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">        # --- 4.3 Make the next call to the model with updated history ---</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">        print</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;Making subsequent API call with tool responses...&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        response </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> await</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> client.aio.models.generate_content(</span></span>
<span data-line=""><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">            model</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">model,</span></span>
<span data-line=""><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">            contents</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">contents,  </span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D"># Send updated history</span></span>
<span data-line=""><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">            config</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">types.GenerateContentConfig(</span></span>
<span data-line=""><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">                temperature</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">1.0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">,</span></span>
<span data-line=""><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">                tools</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">[tools],</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            ),  </span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D"># Keep sending same config</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        )</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        contents.append(response.candidates[</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">].content)</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> turn_count </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">&gt;=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> max_tool_turns </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">and</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> response.function_calls:</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">        print</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">f</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;Maximum tool turns (</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">{</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">max_tool_turns</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">}</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">) reached. Exiting loop.&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">    print</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;MCP tool calling loop finished. Returning final response.&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">    # --- 5. Return Final Response ---</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> response</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        </span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">async</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> def</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> run</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">():</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    async</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> with</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> stdio_client(server_params) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">as</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> (read, write):</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        async</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> with</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> ClientSession(</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            read,</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            write,</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        ) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">as</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> session:</span></span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">            # Test prompt</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            prompt </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62"> &quot;I want to book an apartment in Paris for 2 nights. 03/28 - 03/30&quot;</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">            print</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">f</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;Running agent loop with prompt: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">{</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">prompt</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">}</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">            # Run agent loop</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            res </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> await</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> agent_loop(prompt, client, session)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">            return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> res</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">res </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> await</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> run()</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">print</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(res.text)</span></span></code></pre></div></figure>
<h2 id="what-about-security-updates-authentication"><a href="#what-about-security-updates-authentication" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>What about Security, Updates, Authentication?</h2>
<p>MCP is a living protocol. The specification is actively maintained on GitHub, last update from 03/26 improves security, scalability, and usability.</p>
<ul>
<li><strong>Authentication &amp; Security (OAuth 2.1):</strong> The protocol now mandates the OAuth 2.1 framework for authenticating remote HTTP servers</li>
<li><strong>Improved Transport &amp; Efficiency:</strong> The previous HTTP+SSE transport will be replaced with a more flexible Streamable HTTP transport and support for JSON-RPC batching.</li>
<li><strong>Richer Context &amp; Control:</strong> New tool annotations provide more metadata about a tool&#x27;s behavior (e.g., read-only vs. destructive)</li>
</ul>
<h2 id="acknowledgements"><a href="#acknowledgements" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a>Acknowledgements</h2>
<p>This overview was compiled with the help of deep and manual research, drawing inspiration and information from several excellent resources, including:</p>
<ul>
<li><a target="_blank" rel="noopener noreferrer" href="https://huggingface.co/blog/Kseniase/mcp">What Is MCP, and Why Is Everyone – Suddenly!– Talking About It?</a></li>
<li><a target="_blank" rel="noopener noreferrer" href="https://python.useinstructor.com/blog/2025/03/27/understanding-model-context-protocol-mcp/#conclusion">What is MCP</a></li>
<li><a target="_blank" rel="noopener noreferrer" href="https://www.youtube.com/watch?v=HyzlYwjoXOQ">I gave Claude root access to my server... Model Context Protocol explained</a></li>
<li><a target="_blank" rel="noopener noreferrer" href="https://www.latent.space/p/why-mcp-won">Why MCP Won</a></li>
<li><a target="_blank" rel="noopener noreferrer" href="https://www.youtube.com/watch?v=kQmXtrmQ5Zg">Building Agents with Model Context Protocol - Full Workshop with Mahesh Murag of Anthropic</a></li>
</ul>
<hr/>
<p>If you have any questions, feedback, or ideas, please dm me on <a target="_blank" rel="noopener noreferrer" href="https://x.com/_philschmid">X</a> or <a target="_blank" rel="noopener noreferrer" href="https://www.linkedin.com/in/philipp-schmid-a6a2bb196/">LinkedIn</a>. I am excited to hear about how you are experimenting and pushing the boundaries of AI agents.</p></div><div class="hidden text-sm xl:block not-prose"><div class="sticky top-16 -mt-10 max-h-[calc(var(--vh)-4rem)] overflow-y-auto pt-10"></div></div></div></article></div></main><footer class="container flex flex-col gap-4  md:flex-row justify-between max-w-screen-xl my-4 w-full font-medium text-muted-foreground tracking-wider uppercase transition-colors"><div class="flex gap-4 items-start"><a class="hover:text-primary text-xs md:text-base" href="/philipp-schmid">Philipp Schmid<span> © <!-- -->2025</span></a><a class="hover:text-primary text-xs md:text-base" href="/imprint">Imprint</a><a class="hover:text-primary hidden md:block" href="/rss">RSS Feed</a><div class="hidden md:flex items-center tracking-wider uppercase gap-2 cursor-pointer hover:text-primary"><span>theme</span><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-moon h-4 w-4"><path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"></path></svg></div></div><div class="flex flex-col items-center justify-center"><div class="mb-3 flex gap-6"><a target="_blank" rel="noreferrer" href="mailto:schmidphilipp1995@gmail.com" class="hover:text-primary"><span class="sr-only">Mail</span><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-mail h-6 w-6"><rect width="20" height="16" x="2" y="4" rx="2"></rect><path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"></path></svg></a><a target="_blank" rel="noreferrer" href="https://twitter.com/_philschmid" class="hover:text-primary"><span class="sr-only">Twitter</span><svg class="h-5 w-5" height="23" viewBox="0 0 1200 1227" width="23" xmlns="http://www.w3.org/2000/svg"><path fill="currentColor" d="M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z"></path></svg></a><a target="_blank" rel="noreferrer" href="https://www.linkedin.com/in/philipp-schmid-a6a2bb196/" class="hover:text-primary"><span class="sr-only">LinkedIn</span><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-linkedin h-6 w-6"><path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path><rect width="4" height="12" x="2" y="9"></rect><circle cx="4" cy="4" r="2"></circle></svg></a><a target="_blank" rel="noreferrer" href="https://github.com/philschmid" class="hover:text-primary"><span class="sr-only">GitHub</span><svg viewBox="0 0 438.549 438.549" class="h-6 w-6"><path fill="currentColor" d="M409.132 114.573c-19.608-33.596-46.205-60.194-79.798-79.8-33.598-19.607-70.277-29.408-110.063-29.408-39.781 0-76.472 9.804-110.063 29.408-33.596 19.605-60.192 46.204-79.8 79.8C9.803 148.168 0 184.854 0 224.63c0 47.78 13.94 90.745 41.827 128.906 27.884 38.164 63.906 64.572 108.063 79.227 5.14.954 8.945.283 11.419-1.996 2.475-2.282 3.711-5.14 3.711-8.562 0-.571-.049-5.708-.144-15.417a2549.81 2549.81 0 01-.144-25.406l-6.567 1.136c-4.187.767-9.469 1.092-15.846 1-6.374-.089-12.991-.757-19.842-1.999-6.854-1.231-13.229-4.086-19.13-8.559-5.898-4.473-10.085-10.328-12.56-17.556l-2.855-6.57c-1.903-4.374-4.899-9.233-8.992-14.559-4.093-5.331-8.232-8.945-12.419-10.848l-1.999-1.431c-1.332-.951-2.568-2.098-3.711-3.429-1.142-1.331-1.997-2.663-2.568-3.997-.572-1.335-.098-2.43 1.427-3.289 1.525-.859 4.281-1.276 8.28-1.276l5.708.853c3.807.763 8.516 3.042 14.133 6.851 5.614 3.806 10.229 8.754 13.846 14.842 4.38 7.806 9.657 13.754 15.846 17.847 6.184 4.093 12.419 6.136 18.699 6.136 6.28 0 11.704-.476 16.274-1.423 4.565-.952 8.848-2.383 12.847-4.285 1.713-12.758 6.377-22.559 13.988-29.41-10.848-1.14-20.601-2.857-29.264-5.14-8.658-2.286-17.605-5.996-26.835-11.14-9.235-5.137-16.896-11.516-22.985-19.126-6.09-7.614-11.088-17.61-14.987-29.979-3.901-12.374-5.852-26.648-5.852-42.826 0-23.035 7.52-42.637 22.557-58.817-7.044-17.318-6.379-36.732 1.997-58.24 5.52-1.715 13.706-.428 24.554 3.853 10.85 4.283 18.794 7.952 23.84 10.994 5.046 3.041 9.089 5.618 12.135 7.708 17.705-4.947 35.976-7.421 54.818-7.421s37.117 2.474 54.823 7.421l10.849-6.849c7.419-4.57 16.18-8.758 26.262-12.565 10.088-3.805 17.802-4.853 23.134-3.138 8.562 21.509 9.325 40.922 2.279 58.24 15.036 16.18 22.559 35.787 22.559 58.817 0 16.178-1.958 30.497-5.853 42.966-3.9 12.471-8.941 22.457-15.125 29.979-6.191 7.521-13.901 13.85-23.131 18.986-9.232 5.14-18.182 8.85-26.84 11.136-8.662 2.286-18.415 4.004-29.263 5.146 9.894 8.562 14.842 22.077 14.842 40.539v60.237c0 3.422 1.19 6.279 3.572 8.562 2.379 2.279 6.136 2.95 11.276 1.995 44.163-14.653 80.185-41.062 108.068-79.226 27.88-38.161 41.825-81.126 41.825-128.906-.01-39.771-9.818-76.454-29.414-110.049z"></path></svg></a></div></div></footer></div><script src="/_next/static/chunks/webpack-cc8b75c4764d9a64.js" crossorigin="" async=""></script><script>(self.__next_f=self.__next_f||[]).push([0]);self.__next_f.push([2,null])</script><script>self.__next_f.push([1,"1:HL[\"/_next/static/media/30d74baa196fe88a-s.p.woff2\",\"font\",{\"crossOrigin\":\"\",\"type\":\"font/woff2\"}]\n2:HL[\"/_next/static/media/a34f9d1faa5f3315-s.p.woff2\",\"font\",{\"crossOrigin\":\"\",\"type\":\"font/woff2\"}]\n3:HL[\"/_next/static/css/e3eb46c5556a9523.css\",\"style\",{\"crossOrigin\":\"\"}]\n0:\"$L4\"\n"])</script><script>self.__next_f.push([1,"5:HL[\"/_next/static/css/1fbc182fae463ffb.css\",\"style\",{\"crossOrigin\":\"\"}]\n"])</script><script>self.__next_f.push([1,"6:I[7690,[],\"\"]\n9:I[5613,[],\"\"]\nb:I[1778,[],\"\"]\nc:I[797,[\"258\",\"static/chunks/258-9289ebf35b1e02b1.js\",\"749\",\"static/chunks/749-5722e1b9889608f0.js\",\"788\",\"static/chunks/788-2079b0ce75048abf.js\",\"185\",\"static/chunks/app/layout-157f8f08e6dc305f.js\"],\"PHProvider\"]\nd:I[2494,[\"258\",\"static/chunks/258-9289ebf35b1e02b1.js\",\"749\",\"static/chunks/749-5722e1b9889608f0.js\",\"788\",\"static/chunks/788-2079b0ce75048abf.js\",\"185\",\"static/chunks/app/layout-157f8f08e6dc305f.js\"],\"ThemeProviders\"]\nf:I[5250,[\"258\",\"static/chunks/258-9289ebf35b1e02b1.js\",\"749\",\"static/chunks/749-5722e1b9889608f0.js\",\"42\",\"static/chunks/app/%5Bslug%5D/page-487423f7cd3c1a71.js\"],\"\"]\n10:I[6137,[\"258\",\"static/chunks/258-9289ebf35b1e02b1.js\",\"749\",\"static/chunks/749-5722e1b9889608f0.js\",\"788\",\"static/chunks/788-2079b0ce75048abf.js\",\"185\",\"static/chunks/app/layout-157f8f08e6dc305f.js\"],\"\"]\n13:I[8955,[],\"\"]\na:[\"slug\",\"mcp-introduction\",\"d\"]\n11:T843,"])</script><script>self.__next_f.push([1,"M409.132 114.573c-19.608-33.596-46.205-60.194-79.798-79.8-33.598-19.607-70.277-29.408-110.063-29.408-39.781 0-76.472 9.804-110.063 29.408-33.596 19.605-60.192 46.204-79.8 79.8C9.803 148.168 0 184.854 0 224.63c0 47.78 13.94 90.745 41.827 128.906 27.884 38.164 63.906 64.572 108.063 79.227 5.14.954 8.945.283 11.419-1.996 2.475-2.282 3.711-5.14 3.711-8.562 0-.571-.049-5.708-.144-15.417a2549.81 2549.81 0 01-.144-25.406l-6.567 1.136c-4.187.767-9.469 1.092-15.846 1-6.374-.089-12.991-.757-19.842-1.999-6.854-1.231-13.229-4.086-19.13-8.559-5.898-4.473-10.085-10.328-12.56-17.556l-2.855-6.57c-1.903-4.374-4.899-9.233-8.992-14.559-4.093-5.331-8.232-8.945-12.419-10.848l-1.999-1.431c-1.332-.951-2.568-2.098-3.711-3.429-1.142-1.331-1.997-2.663-2.568-3.997-.572-1.335-.098-2.43 1.427-3.289 1.525-.859 4.281-1.276 8.28-1.276l5.708.853c3.807.763 8.516 3.042 14.133 6.851 5.614 3.806 10.229 8.754 13.846 14.842 4.38 7.806 9.657 13.754 15.846 17.847 6.184 4.093 12.419 6.136 18.699 6.136 6.28 0 11.704-.476 16.274-1.423 4.565-.952 8.848-2.383 12.847-4.285 1.713-12.758 6.377-22.559 13.988-29.41-10.848-1.14-20.601-2.857-29.264-5.14-8.658-2.286-17.605-5.996-26.835-11.14-9.235-5.137-16.896-11.516-22.985-19.126-6.09-7.614-11.088-17.61-14.987-29.979-3.901-12.374-5.852-26.648-5.852-42.826 0-23.035 7.52-42.637 22.557-58.817-7.044-17.318-6.379-36.732 1.997-58.24 5.52-1.715 13.706-.428 24.554 3.853 10.85 4.283 18.794 7.952 23.84 10.994 5.046 3.041 9.089 5.618 12.135 7.708 17.705-4.947 35.976-7.421 54.818-7.421s37.117 2.474 54.823 7.421l10.849-6.849c7.419-4.57 16.18-8.758 26.262-12.565 10.088-3.805 17.802-4.853 23.134-3.138 8.562 21.509 9.325 40.922 2.279 58.24 15.036 16.18 22.559 35.787 22.559 58.817 0 16.178-1.958 30.497-5.853 42.966-3.9 12.471-8.941 22.457-15.125 29.979-6.191 7.521-13.901 13.85-23.131 18.986-9.232 5.14-18.182 8.85-26.84 11.136-8.662 2.286-18.415 4.004-29.263 5.146 9.894 8.562 14.842 22.077 14.842 40.539v60.237c0 3.422 1.19 6.279 3.572 8.562 2.379 2.279 6.136 2.95 11.276 1.995 44.163-14.653 80.185-41.062 108.068-79.226 27.88-38.161 41.825-81.126 41.825-128.906-.01-39.771-9.818-76.454-29.414-110.049z"])</script><script>self.__next_f.push([1,"14:[]\n"])</script><script>self.__next_f.push([1,"4:[[[\"$\",\"link\",\"0\",{\"rel\":\"stylesheet\",\"href\":\"/_next/static/css/e3eb46c5556a9523.css\",\"precedence\":\"next\",\"crossOrigin\":\"\"}]],[\"$\",\"$L6\",null,{\"buildId\":\"Wh2CNMDx0Ij4YSum49UuA\",\"assetPrefix\":\"\",\"initialCanonicalUrl\":\"/mcp-introduction\",\"initialTree\":[\"\",{\"children\":[[\"slug\",\"mcp-introduction\",\"d\"],{\"children\":[\"__PAGE__?{\\\"slug\\\":\\\"mcp-introduction\\\"}\",{}]}]},\"$undefined\",\"$undefined\",true],\"initialSeedData\":[\"\",{\"children\":[[\"slug\",\"mcp-introduction\",\"d\"],{\"children\":[\"__PAGE__\",{},[\"$L7\",\"$L8\",null]]},[\"$\",\"$L9\",null,{\"parallelRouterKey\":\"children\",\"segmentPath\":[\"children\",\"$a\",\"children\"],\"loading\":\"$undefined\",\"loadingStyles\":\"$undefined\",\"loadingScripts\":\"$undefined\",\"hasLoading\":false,\"error\":\"$undefined\",\"errorStyles\":\"$undefined\",\"errorScripts\":\"$undefined\",\"template\":[\"$\",\"$Lb\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":\"$undefined\",\"notFoundStyles\":\"$undefined\",\"styles\":[[\"$\",\"link\",\"0\",{\"rel\":\"stylesheet\",\"href\":\"/_next/static/css/1fbc182fae463ffb.css\",\"precedence\":\"next\",\"crossOrigin\":\"\"}]]}]]},[null,[\"$\",\"html\",null,{\"lang\":\"en\",\"children\":[\"$\",\"$Lc\",null,{\"children\":[\"$\",\"body\",null,{\"className\":\"min-h-screen bg-background font-sans antialiased __variable_d65c78 __variable_d4b326\",\"children\":[\"$\",\"$Ld\",null,{\"children\":[\"$\",\"div\",null,{\"className\":\"relative flex min-h-dvh flex-col bg-background\",\"children\":[\"$Le\",[\"$\",\"main\",null,{\"className\":\"flex-1\",\"children\":[\"$\",\"$L9\",null,{\"parallelRouterKey\":\"children\",\"segmentPath\":[\"children\"],\"loading\":\"$undefined\",\"loadingStyles\":\"$undefined\",\"loadingScripts\":\"$undefined\",\"hasLoading\":false,\"error\":\"$undefined\",\"errorStyles\":\"$undefined\",\"errorScripts\":\"$undefined\",\"template\":[\"$\",\"$Lb\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":[\"$\",\"section\",null,{\"className\":\"flex items-center flex-col justify-center\",\"children\":[[\"$\",\"div\",null,{\"className\":\"flex-1 my-12\",\"children\":[\"$\",\"h1\",null,{\"className\":\"text-5xl font-serif\",\"children\":\"404 - Page Not Found\"}]}],[\"$\",\"p\",null,{\"className\":\"mb-4 text-2xl\",\"children\":\"The page you are looking for does not exist.\"}]]}],\"notFoundStyles\":[],\"styles\":null}]}],[\"$\",\"footer\",null,{\"className\":\"container flex flex-col gap-4  md:flex-row justify-between max-w-screen-xl my-4 w-full font-medium text-muted-foreground tracking-wider uppercase transition-colors\",\"children\":[[\"$\",\"div\",null,{\"className\":\"flex gap-4 items-start\",\"children\":[[\"$\",\"$Lf\",null,{\"href\":\"/philipp-schmid\",\"className\":\"hover:text-primary text-xs md:text-base\",\"children\":[\"Philipp Schmid\",[\"$\",\"span\",null,{\"children\":[\" © \",2025]}]]}],[\"$\",\"$Lf\",null,{\"href\":\"/imprint\",\"className\":\"hover:text-primary text-xs md:text-base\",\"children\":\"Imprint\"}],[\"$\",\"$Lf\",null,{\"href\":\"/rss\",\"className\":\"hover:text-primary hidden md:block\",\"children\":\"RSS Feed\"}],[\"$\",\"$L10\",null,{}]]}],[\"$\",\"div\",null,{\"className\":\"flex flex-col items-center justify-center\",\"children\":[\"$\",\"div\",null,{\"className\":\"mb-3 flex gap-6\",\"children\":[[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noreferrer\",\"href\":\"mailto:schmidphilipp1995@gmail.com\",\"className\":\"hover:text-primary\",\"children\":[[\"$\",\"span\",null,{\"className\":\"sr-only\",\"children\":\"Mail\"}],[\"$\",\"svg\",null,{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":24,\"height\":24,\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":2,\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"className\":\"lucide lucide-mail h-6 w-6\",\"children\":[[\"$\",\"rect\",\"18n3k1\",{\"width\":\"20\",\"height\":\"16\",\"x\":\"2\",\"y\":\"4\",\"rx\":\"2\"}],[\"$\",\"path\",\"1ocrg3\",{\"d\":\"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\"}],\"$undefined\"]}]]}],[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noreferrer\",\"href\":\"https://twitter.com/_philschmid\",\"className\":\"hover:text-primary\",\"children\":[[\"$\",\"span\",null,{\"className\":\"sr-only\",\"children\":\"Twitter\"}],[\"$\",\"svg\",null,{\"className\":\"h-5 w-5\",\"height\":\"23\",\"viewBox\":\"0 0 1200 1227\",\"width\":\"23\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"children\":[\"$\",\"path\",null,{\"fill\":\"currentColor\",\"d\":\"M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z\"}]}]]}],[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noreferrer\",\"href\":\"https://www.linkedin.com/in/philipp-schmid-a6a2bb196/\",\"className\":\"hover:text-primary\",\"children\":[[\"$\",\"span\",null,{\"className\":\"sr-only\",\"children\":\"LinkedIn\"}],[\"$\",\"svg\",null,{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":24,\"height\":24,\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":2,\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"className\":\"lucide lucide-linkedin h-6 w-6\",\"children\":[[\"$\",\"path\",\"c2jq9f\",{\"d\":\"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\"}],[\"$\",\"rect\",\"mk3on5\",{\"width\":\"4\",\"height\":\"12\",\"x\":\"2\",\"y\":\"9\"}],[\"$\",\"circle\",\"bt5ra8\",{\"cx\":\"4\",\"cy\":\"4\",\"r\":\"2\"}],\"$undefined\"]}]]}],[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noreferrer\",\"href\":\"https://github.com/philschmid\",\"className\":\"hover:text-primary\",\"children\":[[\"$\",\"span\",null,{\"className\":\"sr-only\",\"children\":\"GitHub\"}],[\"$\",\"svg\",null,{\"viewBox\":\"0 0 438.549 438.549\",\"className\":\"h-6 w-6\",\"children\":[\"$\",\"path\",null,{\"fill\":\"currentColor\",\"d\":\"$11\"}]}]]}]]}]}]]}]]}]}]}]}]}],null]],\"initialHead\":[false,\"$L12\"],\"globalErrorComponent\":\"$13\",\"missingSlots\":\"$W14\"}]]\n"])</script><script>self.__next_f.push([1,"17:I[1097,[\"258\",\"static/chunks/258-9289ebf35b1e02b1.js\",\"749\",\"static/chunks/749-5722e1b9889608f0.js\",\"42\",\"static/chunks/app/%5Bslug%5D/page-487423f7cd3c1a71.js\"],\"TableOfContents\"]\n18:I[1749,[\"258\",\"static/chunks/258-9289ebf35b1e02b1.js\",\"749\",\"static/chunks/749-5722e1b9889608f0.js\",\"42\",\"static/chunks/app/%5Bslug%5D/page-487423f7cd3c1a71.js\"],\"Image\"]\n19:I[6030,[\"258\",\"static/chunks/258-9289ebf35b1e02b1.js\",\"749\",\"static/chunks/749-5722e1b9889608f0.js\",\"788\",\"static/chunks/788-2079b0ce75048abf.js\",\"185\",\"static/chunks/app/layout-157f8f08e6dc305f.js\"],\"MainNav\"]\n1a:I[9817,[\"258\",\"static/chunks/258-9289ebf35b1e02b1.js\",\"749\",\"static/chunks/749-5722e1b9889608f0.js\",\"788\",\"static/chunks/788-2079b0ce75048abf.js\",\"185\",\"static/chunks/app/layout-157f8f08e6dc305f.js\"],\"MobileNav\"]\n15:T4064,"])</script><script>self.__next_f.push([1,"{\"@context\":\"https://schema.org\",\"@type\":\"BlogPosting\",\"name\":\"Model Context Protocol (MCP) an overview\",\"headline\":\"Model Context Protocol (MCP) an overview\",\"author\":{\"@type\":\"Person\",\"name\":\"Philipp Schmid\"},\"creator\":{\"@type\":\"Person\",\"name\":\"Philipp Schmid\"},\"publisher\":{\"@type\":\"Organization\",\"name\":\"Philipp Schmid\",\"logo\":{\"@type\":\"ImageObject\",\"url\":\"https://www.philschmid.de/api/og?title=Philipp Schmid\"}},\"identifier\":\"mcp-introduction\",\"url\":\"https://www.philschmid.de/mcp-introduction\",\"image\":\"https://www.philschmid.de/static/blog/mcp-introduction/thumbnail.jpg\",\"description\":\"Overview of the Model Context Protocol (MCP) how it works, what are MCP servers and clients, and how to use it.\",\"articleBody\":\"\\nThe [Model Context Protocol](https://modelcontextprotocol.io/introduction) (MCP) is an open standard [introduced by Anthropic](https://www.anthropic.com/news/model-context-protocol) with the goal to standardize how AI applications (chatbots, IDE assistants, or custom agents) connect with external tools, data sources, and systems. \\n\\n![api](/static/blog/mcp-introduction/api.png)\\n\\nThink of it like USB for AI integrations. Before standards like USB, connecting peripherals required a mess of different ports and custom drivers. Similarly, integrating AI applications with external tools and systems is/was an \\\"M×N problem\\\".   \\nIf you have M different AI applications (Chat, RAG 1, custom agents, etc.) and N different tools/systems (GitHub, Slack, Asana, databases, etc.), you might need to build M×N different integrations. This leads to duplicated effort across teams, inconsistent implementations. \\n\\nMCP aims to simplify this by providing a common API and transforming this into an \\\"M+N problem\\\". Tool creators build N MCP servers (one for each system), while application developers build M MCP clients (one for each AI application). MCP defines a client-server architecture where:\\n\\n- **Hosts:** Applications the user interacts with (e.g., Claude Desktop, an IDE like Cursor, a custom agent).  \\n- **Clients:** Live within the Host application and manage the connection to one specific MCP server. Maintain a 1:1 to connection.   \\n- **Servers:** External programs that expose Tools, Resources and Prompts via standard API to the AI model via the client.\\n\\nThe current components of MCP servers include:\\n\\n1. **Tools  (Model-controlled):** These are functions (tools) that LLMs can call to perform specific actions, e.g. weather API, basically function calling  \\n2. **Resources  (Application-controlled):** These are data sources that LLMs can access, similar to GET endpoints in a REST API. Resources provide data without performing significant computation, no side effects. Part of the context/request  \\n3. **Prompts (User-controlled):** These are pre-defined templates to use tools or resources in the most optimal way. Selected before running inference\\n\\n![overview](/static/blog/mcp-introduction/overview.png)\\n\\n## How does MCP work?\\n\\nMCP operates on the client-server model described earlier. Here’s a simplified flow:\\n\\n![architecture](/static/blog/mcp-introduction/architecture.png)\\n\\n1. **Initialization:** When a Host application starts it creates N MCP Clients, which exchange information about capabilities and protocol versions via a handshake.  \\n2. **Discovery:** Clients requests what capabilities (Tools, Resources, Prompts) the server offers. The Server responds with a list and descriptions.  \\n3. **Context Provision:** The Host application can now make resources and prompts available to the user or parses the tools into a LLM compatible format, e.g. JSON Function calling  \\n4. **Invocation:** If the LLM determines it needs to use a Tool (e.g., based on the user's request like \\\"What are the open issues in the 'X' repo?\\\"), the Host directs the Client to send an invocation request to the appropriate Server.  \\n5. **Execution:** The Server receives the request (e.g., fetch\\\\_github\\\\_issues with repo 'X'), executes the underlying logic (calls the GitHub API), and gets the result.  \\n6. **Response:** The Server sends the result back to the Client.  \\n7. **Completion:** The Client relays the result to the Host, which incorporates it into the LLM's context, allowing the LLM to generate a final response for the user based on the fresh, external information.\\n\\n### MCP servers\\n\\nMCP Servers are the bridge/API between the MCP world and the specific functionality of an external system (an API, a database, local files, etc.). They are essentially wrappers that expose these external capabilities according to the MCP specification.\\n\\nServers  can be built in various languages (Python, TypeScript, Java, Rust, etc.) as long as they can communicate over the supported transports. Servers communicate with clients primarily via two methods:\\n\\n- **stdio (Standard Input/Output):** Used when Client and Server run on the same machines. This is simple and effective for local integrations (e.g., accessing local files or running a local script).  \\n- **HTTP via SSE (Server-Sent Events):** The Client connects to the Server via HTTP. After an initial setup, the Server can push messages (events) to the Client over a persistent connection using the SSE standard. \\n\\nExample of how to build an MCP server with Python and [FastMCP](https://github.com/jlowin/fastmcp/tree/main): \\n\\n```py\\nfrom fastmcp import FastMCP\\n\\n# Create an MCP server\\nmcp = FastMCP(\\\"Demo\\\")\\n\\n# Add a tool, will be converted into JSON spec for function calling\\n@mcp.tool()\\ndef add(a: int, b: int) -\u003e int:\\n    \\\"\\\"\\\"Add two numbers\\\"\\\"\\\"\\n    return a + b\\n\\n# Add a data resource, e.g. displayed on new chats\\n@mcp.resource(\\\"greeting://{name}\\\")\\ndef get_greeting(name: str) -\u003e str:\\n    \\\"\\\"\\\"Get a personalized greeting\\\"\\\"\\\"\\n    return f\\\"Hello, {name}!\\\"\\n\\n# Specific prompt templates for better use\\n@mcp.prompt()\\ndef review_code(code: str) -\u003e str:\\n    return f\\\"Please review this code:\\\\n\\\\n{code}\\\"\\n```\\n\\nList of pre-build and community build MCP servers: \\n\\n- [https://github.com/punkpeye/awesome-mcp-servers](https://github.com/punkpeye/awesome-mcp-servers)   \\n- [https://github.com/modelcontextprotocol/servers](https://github.com/modelcontextprotocol/servers)   \\n- [https://mcp.composio.dev/](https://mcp.composio.dev/) \\n\\n### MCP Clients\\n\\nMCP Clients are part of Host applications (the IDE, chatbot, etc.) that manage the communication with a specific MCP Server. \\n\\n- **Role:** Handle connection management, capability discovery, request forwarding, and response handling according to the MCP spec.  \\n- **Examples of Hosts/Clients:**  \\n  - UI Apps: Claude Desktop, Microsoft Copilot Studio, LibreChat, Claude Code  \\n  - IDEs: Cursor, Windsurf, Continue, Zed, Cline  \\n  - Custom Agents (Python/TypeScript):  \\n    - Firebase Genkit  \\n    - LangGraph  \\n    - OpenAI agents sdk  \\n    - …. \\n\\nExample of how to build an MCP client with Python and mcp. \\n\\n```py\\nfrom mcp import ClientSession, StdioServerParameters, types\\nfrom mcp.client.stdio import stdio_client\\n\\n# Commands for running/connecting to MCP Server\\nserver_params = StdioServerParameters(\\n    command=\\\"python\\\",  # Executable\\n    args=[\\\"example_server.py\\\"],  # Optional command line arguments\\n    env=None,  # Optional environment variables\\n)\\n\\nasync with stdio_client(server_params) as (read, write):\\n    async with ClientSession(\\n        read, write, sampling_callback=handle_sampling_message\\n    ) as session:\\n        # Initialize the connection\\n        await session.initialize()\\n\\n        # List available prompts\\n        prompts = await session.list_prompts()\\n\\n        # Get a prompt\\n        prompt = await session.get_prompt(\\n            \\\"example-prompt\\\", arguments={\\\"arg1\\\": \\\"value\\\"}\\n        )\\n\\n        # List available resources\\n        resources = await session.list_resources()\\n\\n        # List available tools\\n        tools = await session.list_tools()\\n\\n        # Read a resource\\n        content, mime_type = await session.read_resource(\\\"file://some/path\\\")\\n\\n        # Call a tool\\n        result = await session.call_tool(\\\"tool-name\\\", arguments={\\\"arg1\\\": \\\"value\\\"})\\n\\n```\\n\\n## Why is there so much hype? Did MCP win?\\n\\nWhile Anthropic announced MCP in late 2024, its momentum significantly accelerated in early 2025\\\\. This isn't just random hype; several factors converged:\\n\\n- **\\\"AI-Native\\\"** while older standards like OpenAPI, GraphQL, or SOAP exist for API interaction, MCP was designed specifically for the needs of modern AI agents. MCP refines patterns seen in agent development:  \\n  - Tools (Model-controlled): Actions the AI decides to take.  \\n  - Resources (Application-controlled): Context provided to the AI.  \\n  - Prompts (User-controlled): Specific user-invoked interactions.  \\n- **\\\"Open Standard\\\" with a Big Backer:** Any \\\"open standard” should have a spec, and [MCP has a VERY good spec](https://spec.modelcontextprotocol.io/specification/2024-11-05/). The spec alone defeats a lot of contenders, who do not provide such detailed specs.  \\n- **Built on Proven Foundations:** Instead of re-inventing everything from scratch, Anthropic adapted from Language Server Protocol (LSP), e.g. [JSON-RPC 2.0](https://www.jsonrpc.org/)  \\n- **Strong Initial Ecosystem \u0026 Dogfooding:** MCP didn't launch as just a spec. Anthropic \\\"dogfooded\\\" it extensively and released it with a comprehensive initial set:  \\n  - Client: Claude Desktop.  \\n  - Servers: Numerous reference implementations (filesystem, git, Slack, etc.).  \\n  - Tooling: MCP Inspector for testing, great documentation  \\n  - SDKs: Python and TypeScript libraries, now Java, Kotlin C\\\\#   \\n- **Network Effects:** The open nature fostered a community. Tools like Cursor and Windsurf integrated MCP. Companies like Composio provided pre-built servers for hundreds of integrations. OpenAI announced support for MCP. Developers built thousands of community MCP servers (GitHub, Slack, databases, Docker, etc.). \\n\\n## Practical Example with Gemini and Python uSDK\\n\\n```py\\nfrom typing import List\\nfrom google import genai\\nfrom google.genai import types\\nfrom mcp import ClientSession, StdioServerParameters\\nfrom mcp.client.stdio import stdio_client\\nimport os\\n\\nclient = genai.Client(api_key=os.getenv(\\\"GEMINI_API_KEY\\\"))\\nmodel = \\\"gemini-2.0-flash\\\"\\n\\n# Create server parameters for stdio connection\\nserver_params = StdioServerParameters(\\n    command=\\\"npx\\\",  # Executable\\n    args=[\\n        \\\"-y\\\",\\n        \\\"@openbnb/mcp-server-airbnb\\\",\\n    ],  # Optional command line arguments\\n    env=None,  # Optional environment variables\\n)\\n\\nasync def agent_loop(prompt: str, client: genai.Client, session: ClientSession):\\n    contents = [types.Content(role=\\\"user\\\", parts=[types.Part(text=prompt)])]\\n    # Initialize the connection\\n    await session.initialize()\\n    \\n    # --- 1. Get Tools from Session and convert to Gemini Tool objects ---\\n    mcp_tools = await session.list_tools()\\n    tools = types.Tool(function_declarations=[\\n        {\\n            \\\"name\\\": tool.name,\\n            \\\"description\\\": tool.description,\\n            \\\"parameters\\\": tool.inputSchema,\\n        }\\n        for tool in mcp_tools.tools\\n    ])\\n    \\n    # --- 2. Initial Request with user prompt and function declarations ---\\n    response = await client.aio.models.generate_content(\\n        model=model,  # Or your preferred model supporting function calling\\n        contents=contents,\\n        config=types.GenerateContentConfig(\\n            temperature=0,\\n            tools=[tools],\\n        ),  # Example other config\\n    )\\n    \\n    # --- 3. Append initial response to contents ---\\n    contents.append(response.candidates[0].content)\\n\\n    # --- 4. Tool Calling Loop ---            \\n    turn_count = 0\\n    max_tool_turns = 5\\n    while response.function_calls and turn_count \u003c max_tool_turns:\\n        turn_count += 1\\n        tool_response_parts: List[types.Part] = []\\n\\n        # --- 4.1 Process all function calls in order and return in this turn ---\\n        for fc_part in response.function_calls:\\n            tool_name = fc_part.name\\n            args = fc_part.args or {}  # Ensure args is a dict\\n            print(f\\\"Attempting to call MCP tool: '{tool_name}' with args: {args}\\\")\\n\\n            tool_response: dict\\n            try:\\n                # Call the session's tool executor\\n                tool_result = await session.call_tool(tool_name, args)\\n                print(f\\\"MCP tool '{tool_name}' executed successfully.\\\")\\n                if tool_result.isError:\\n                    tool_response = {\\\"error\\\": tool_result.content[0].text}\\n                else:\\n                    tool_response = {\\\"result\\\": tool_result.content[0].text}\\n            except Exception as e:\\n                tool_response = {\\\"error\\\":  f\\\"Tool execution failed: {type(e).__name__}: {e}\\\"}\\n            \\n            # Prepare FunctionResponse Part\\n            tool_response_parts.append(\\n                types.Part.from_function_response(\\n                    name=tool_name, response=tool_response\\n                )\\n            )\\n\\n        # --- 4.2 Add the tool response(s) to history ---\\n        contents.append(types.Content(role=\\\"user\\\", parts=tool_response_parts))\\n        print(f\\\"Added {len(tool_response_parts)} tool response parts to history.\\\")\\n\\n        # --- 4.3 Make the next call to the model with updated history ---\\n        print(\\\"Making subsequent API call with tool responses...\\\")\\n        response = await client.aio.models.generate_content(\\n            model=model,\\n            contents=contents,  # Send updated history\\n            config=types.GenerateContentConfig(\\n                temperature=1.0,\\n                tools=[tools],\\n            ),  # Keep sending same config\\n        )\\n        contents.append(response.candidates[0].content)\\n\\n    if turn_count \u003e= max_tool_turns and response.function_calls:\\n        print(f\\\"Maximum tool turns ({max_tool_turns}) reached. Exiting loop.\\\")\\n\\n    print(\\\"MCP tool calling loop finished. Returning final response.\\\")\\n    # --- 5. Return Final Response ---\\n    return response\\n        \\nasync def run():\\n    async with stdio_client(server_params) as (read, write):\\n        async with ClientSession(\\n            read,\\n            write,\\n        ) as session:\\n            # Test prompt\\n            prompt = \\\"I want to book an apartment in Paris for 2 nights. 03/28 - 03/30\\\"\\n            print(f\\\"Running agent loop with prompt: {prompt}\\\")\\n            # Run agent loop\\n            res = await agent_loop(prompt, client, session)\\n            return res\\nres = await run()\\nprint(res.text)\\n```\\n\\n## What about Security, Updates, Authentication?\\n\\nMCP is a living protocol. The specification is actively maintained on GitHub, last update from 03/26 improves security, scalability, and usability.  \\n\\n- **Authentication \u0026 Security (OAuth 2.1):** The protocol now mandates the OAuth 2.1 framework for authenticating remote HTTP servers  \\n- **Improved Transport \u0026 Efficiency:** The previous HTTP+SSE transport will be replaced with a more flexible Streamable HTTP transport and support for JSON-RPC batching.  \\n- **Richer Context \u0026 Control:** New tool annotations provide more metadata about a tool's behavior (e.g., read-only vs. destructive)\\n\\n## Acknowledgements\\n\\nThis overview was compiled with the help of deep and manual research, drawing inspiration and information from several excellent resources, including:\\n\\n*   [What Is MCP, and Why Is Everyone – Suddenly!– Talking About It?](https://huggingface.co/blog/Kseniase/mcp)\\n*   [What is MCP](https://python.useinstructor.com/blog/2025/03/27/understanding-model-context-protocol-mcp/#conclusion)\\n*   [I gave Claude root access to my server... Model Context Protocol explained](https://www.youtube.com/watch?v=HyzlYwjoXOQ)\\n*   [Why MCP Won](https://www.latent.space/p/why-mcp-won)\\n*   [Building Agents with Model Context Protocol - Full Workshop with Mahesh Murag of Anthropic](https://www.youtube.com/watch?v=kQmXtrmQ5Zg)\\n\\n---\\n\\nIf you have any questions, feedback, or ideas, please dm me on [X](https://x.com/_philschmid) or [LinkedIn](https://www.linkedin.com/in/philipp-schmid-a6a2bb196/). I am excited to hear about how you are experimenting and pushing the boundaries of AI agents.\\n\",\"datePublished\":\"2025-04-03\",\"dateModified\":\"2025-04-03\",\"dateCreated\":\"2025-04-03\"}"])</script><script>self.__next_f.push([1,"8:[\"$\",\"div\",null,{\"children\":[[\"$\",\"script\",null,{\"suppressHydrationWarning\":true,\"type\":\"application/ld+json\",\"dangerouslySetInnerHTML\":{\"__html\":\"$15\"}}],[\"$\",\"article\",null,{\"className\":\"lg:py-6 lg:mt-20 mt-10 mx-4 md:mx-auto max-w-7xl\",\"children\":[[\"$\",\"div\",null,{\"className\":\"prose dark:prose-invert max-w-5xl md:max-w-4xl text-left md:mx-auto px-4 \",\"children\":[\"$\",\"h1\",null,{\"className\":\"text-4xl font-light w-full font-serif\",\"children\":\"Model Context Protocol (MCP) an overview\"}]}],[\"$\",\"div\",null,{\"className\":\"py-2 mx-auto xl:mx-0 xl:grid prose dark:prose-invert xl:grid-cols-[150px_1fr_250px] xl:py-10 xl:gap-20\",\"children\":[[\"$\",\"div\",null,{\"className\":\"flex xl:flex-col mx-auto gap-2 xl:gap-0 text-sm mt-[1.25rem]\",\"children\":[[\"$\",\"span\",null,{\"children\":[\" \",\"April 3, 2025\"]}],[\"$\",\"span\",null,{\"children\":[9,\" minute read\"]}],\"$undefined\"]}],[\"$\",\"div\",null,{\"className\":\"lg:w-[40em]\",\"children\":\"$L16\"}],[\"$\",\"div\",null,{\"className\":\"hidden text-sm xl:block not-prose\",\"children\":[\"$\",\"div\",null,{\"className\":\"sticky top-16 -mt-10 max-h-[calc(var(--vh)-4rem)] overflow-y-auto pt-10\",\"children\":[\"$\",\"$L17\",null,{\"toc\":{\"items\":[{\"url\":\"#how-does-mcp-work\",\"title\":\"How does MCP work?\",\"items\":[{\"url\":\"#mcp-servers\",\"title\":\"MCP servers\"},{\"url\":\"#mcp-clients\",\"title\":\"MCP Clients\"}]},{\"url\":\"#why-is-there-so-much-hype-did-mcp-win\",\"title\":\"Why is there so much hype? Did MCP win?\"},{\"url\":\"#practical-example-with-gemini-and-python-usdk\",\"title\":\"Practical Example with Gemini and Python uSDK\"},{\"url\":\"#what-about-security-updates-authentication\",\"title\":\"What about Security, Updates, Authentication?\"},{\"url\":\"#acknowledgements\",\"title\":\"Acknowledgements\"}]}}]}]}]]}]]}]]}]\n"])</script><script>self.__next_f.push([1,"e:[\"$\",\"header\",null,{\"className\":\"z-10 sticky top-0 md:w-full backdrop-blur supports-[backdrop-filter]:bg-background/30 md:px-4\",\"children\":[\"$\",\"div\",null,{\"className\":\"md:mx-auto max-w-screen-xl w-full flex justify-between px-2 md:px-0 py-4\",\"children\":[[\"$\",\"$Lf\",null,{\"href\":\"/\",\"className\":\"flex gap-2 items-center hover:underline\",\"children\":[[\"$\",\"$L18\",null,{\"src\":\"/static/logo.png\",\"alt\":\"logo\",\"width\":24,\"height\":24}],[\"$\",\"span\",null,{\"className\":\"font-medium tracking-wider uppercase\",\"children\":\"Philschmid\"}]]}],[\"$\",\"$L19\",null,{\"posts\":[{\"frontmatter\":{\"title\":\"Zero to One: Learning Agentic Patterns\"},\"slug\":\"agentic-pattern\"},{\"frontmatter\":{\"title\":\"Google Gemini LangChain Cheatsheet\"},\"slug\":\"gemini-langchain-cheatsheet\"},{\"frontmatter\":{\"title\":\"OpenAI Codex CLI, how does it work?\"},\"slug\":\"openai-codex-cli\"},{\"frontmatter\":{\"title\":\"Model Context Protocol (MCP) an overview\"},\"slug\":\"mcp-introduction\"},{\"frontmatter\":{\"title\":\"ReAct agent from scratch with Gemini 2.5 and LangGraph\"},\"slug\":\"langgraph-gemini-2-5-react-agent\"},{\"frontmatter\":{\"title\":\"Pass@k vs Pass^k: Understanding Agent Reliability\"},\"slug\":\"agents-pass-at-k-pass-power-k\"},{\"frontmatter\":{\"title\":\"Google Gemma 3 Function Calling Example\"},\"slug\":\"gemma-function-calling\"},{\"frontmatter\":{\"title\":\"Function Calling Guide: Google DeepMind Gemini 2.0 Flash\"},\"slug\":\"gemini-function-calling\"},{\"frontmatter\":{\"title\":\"From PDFs to Insights: Structured Outputs from PDFs with Gemini 2.0\"},\"slug\":\"gemini-pdf-to-data\"},{\"frontmatter\":{\"title\":\"Mini-R1: Reproduce Deepseek R1 „aha moment“ a RL tutorial\"},\"slug\":\"mini-deepseek-r1\"},{\"frontmatter\":{\"title\":\"How to align open LLMs in 2025 with DPO \u0026 and synthetic data\"},\"slug\":\"rl-with-llms-in-2025-dpo\"},{\"frontmatter\":{\"title\":\"Bite: How Deepseek R1 was trained\"},\"slug\":\"deepseek-r1\"},{\"frontmatter\":{\"title\":\"How to use Anthropic MCP Server with open LLMs, OpenAI or Google Gemini\"},\"slug\":\"mcp-example-llama\"},{\"frontmatter\":{\"title\":\"Fine-tune classifier with ModernBERT in 2025\"},\"slug\":\"fine-tune-modern-bert-in-2025\"},{\"frontmatter\":{\"title\":\"How to fine-tune open LLMs in 2025 with Hugging Face\"},\"slug\":\"fine-tune-llms-in-2025\"},{\"frontmatter\":{\"title\":\"Deploy QwQ-32B-Preview the best open Reasoning Model on AWS with Hugging Face\"},\"slug\":\"sagemaker-deploy-qwq\"},{\"frontmatter\":{\"title\":\"Deploy Llama 3.2 Vision on Amazon SageMaker\"},\"slug\":\"sagemaker-llama32-vision\"},{\"frontmatter\":{\"title\":\"How to Fine-Tune Multimodal Models or VLMs with Hugging Face TRL\"},\"slug\":\"fine-tune-multimodal-llms-with-trl\"},{\"frontmatter\":{\"title\":\"Evaluate open LLMs with Vertex AI and Gemini\"},\"slug\":\"evaluate-llm-with-gemini\"},{\"frontmatter\":{\"title\":\"Evaluate LLMs using Evaluation Harness and Hugging Face TGI/vLLM\"},\"slug\":\"evaluate-llms-with-lm-eval-and-tgi-vllm\"},{\"frontmatter\":{\"title\":\"Deploy open LLMs with Terraform and Amazon SageMaker\"},\"slug\":\"terraform-llm-sagemaker\"},{\"frontmatter\":{\"title\":\"LLM Evaluation doesn't need to be complicated\"},\"slug\":\"llm-evaluation\"},{\"frontmatter\":{\"title\":\"Evaluating Open LLMs with MixEval: The Closest Benchmark to LMSYS Chatbot Arena\"},\"slug\":\"evaluate-llm-mixeval\"},{\"frontmatter\":{\"title\":\"Train and Deploy open Embedding Models on Amazon SageMaker\"},\"slug\":\"sagemaker-train-deploy-embedding-models\"},{\"frontmatter\":{\"title\":\"Deploy Mixtral 8x7B on AWS Inferentia2 with Hugging Face Optimum\"},\"slug\":\"inferentia2-mixtral-8x7b\"},{\"frontmatter\":{\"title\":\"Fine-tune Llama 3 with PyTorch FSDP and Q-Lora on Amazon SageMaker\"},\"slug\":\"sagemaker-train-deploy-llama3\"},{\"frontmatter\":{\"title\":\"Fine-tune Embedding models for Retrieval Augmented Generation (RAG)\"},\"slug\":\"fine-tune-embedding-model-for-rag\"},{\"frontmatter\":{\"title\":\"Understanding the Cost of Generative AI Models in Production\"},\"slug\":\"cost-generative-ai\"},{\"frontmatter\":{\"title\":\"Deploy Llama 3 70B on AWS Inferentia2 with Hugging Face Optimum\"},\"slug\":\"inferentia2-llama3-70b\"},{\"frontmatter\":{\"title\":\"Deploy open LLMs with vLLM on Hugging Face Inference Endpoints\"},\"slug\":\"vllm-inference-endpoints\"},{\"frontmatter\":{\"title\":\"Efficiently fine-tune Llama 3 with PyTorch FSDP and Q-Lora\"},\"slug\":\"fsdp-qlora-llama3\"},{\"frontmatter\":{\"title\":\"Deploy Llama 3 on Amazon SageMaker\"},\"slug\":\"sagemaker-llama3\"},{\"frontmatter\":{\"title\":\"Accelerate Mixtral 8x7B with Speculative Decoding and Quantization on Amazon SageMaker\"},\"slug\":\"sagemaker-awq-medusa\"},{\"frontmatter\":{\"title\":\"Deploy Llama 2 70B on AWS Inferentia2 with Hugging Face Optimum\"},\"slug\":\"inferentia2-llama-70b-inference\"},{\"frontmatter\":{\"title\":\"Fine-Tune \u0026 Evaluate LLMs in 2024 with Amazon SageMaker\"},\"slug\":\"sagemaker-train-evalaute-llms-2024\"},{\"frontmatter\":{\"title\":\"Evaluate LLMs with Hugging Face Lighteval on Amazon SageMaker\"},\"slug\":\"sagemaker-evaluate-llm-lighteval\"},{\"frontmatter\":{\"title\":\"How to fine-tune Google Gemma with ChatML and Hugging Face TRL\"},\"slug\":\"fine-tune-google-gemma\"},{\"frontmatter\":{\"title\":\"RLHF in 2024 with DPO \u0026 Hugging Face\"},\"slug\":\"dpo-align-llms-in-2024-with-trl\"},{\"frontmatter\":{\"title\":\"How to Fine-Tune LLMs in 2024 with Hugging Face\"},\"slug\":\"fine-tune-llms-in-2024-with-trl\"},{\"frontmatter\":{\"title\":\"Scale LLM Inference on Amazon SageMaker with Multi-Replica Endpoints\"},\"slug\":\"sagemaker-multi-replica\"},{\"frontmatter\":{\"title\":\"Fine-tune Llama 7B on AWS Trainium \"},\"slug\":\"fine-tune-llama-7b-trainium\"},{\"frontmatter\":{\"title\":\"Programmatically manage 🤗 Inference Endpoints\"},\"slug\":\"inference-endpoints-iac\"},{\"frontmatter\":{\"title\":\"Deploy Mixtral 8x7B on Amazon SageMaker\"},\"slug\":\"sagemaker-deploy-mixtral\"},{\"frontmatter\":{\"title\":\"Deploy Embedding Models on AWS inferentia2 with Amazon SageMaker\"},\"slug\":\"inferentia2-embeddings\"},{\"frontmatter\":{\"title\":\"Deploy Llama 2 7B on AWS inferentia2 with Amazon SageMaker\"},\"slug\":\"inferentia2-llama-7b\"},{\"frontmatter\":{\"title\":\"Deploy Stable Diffusion XL on AWS inferentia2 with Amazon SageMaker\"},\"slug\":\"inferentia2-stable-diffusion-xl\"},{\"frontmatter\":{\"title\":\"Amazon Bedrock: How good (bad) is Titan Embeddings? \"},\"slug\":\"amazon-titan-embeddings\"},{\"frontmatter\":{\"title\":\"Evaluate LLMs and RAG a practical example using Langchain and Hugging Face\"},\"slug\":\"evaluate-llm\"},{\"frontmatter\":{\"title\":\"Deploy Idefics 9B \u0026 80B on Amazon SageMaker\"},\"slug\":\"sagemaker-idefics\"},{\"frontmatter\":{\"title\":\"Train and Deploy Mistral 7B with Hugging Face on Amazon SageMaker\"},\"slug\":\"sagemaker-mistral\"},{\"frontmatter\":{\"title\":\"Llama 2 on Amazon SageMaker a Benchmark\"},\"slug\":\"sagemaker-llama-benchmark\"},{\"frontmatter\":{\"title\":\"Fine-tune Falcon 180B with DeepSpeed ZeRO, LoRA \u0026 Flash Attention\"},\"slug\":\"deepspeed-lora-flash-attention\"},{\"frontmatter\":{\"title\":\"Fine-tune Falcon 180B with QLoRA and Flash Attention on Amazon SageMaker\"},\"slug\":\"sagemaker-falcon-180b-qlora\"},{\"frontmatter\":{\"title\":\"Deploy Falcon 180B on Amazon SageMaker\"},\"slug\":\"sagemaker-falcon-180b\"},{\"frontmatter\":{\"title\":\"Optimize open LLMs using GPTQ and Hugging Face Optimum\"},\"slug\":\"gptq-llama\"},{\"frontmatter\":{\"title\":\"LLMOps: Deploy Open LLMs using Infrastructure as Code with AWS CDK\"},\"slug\":\"cdk-llama2\"},{\"frontmatter\":{\"title\":\"Deploy Llama 2 7B/13B/70B on Amazon SageMaker\"},\"slug\":\"sagemaker-llama-llm\"},{\"frontmatter\":{\"title\":\"Introducing EasyLLM - streamline open LLMs\"},\"slug\":\"introducing-easyllm\"},{\"frontmatter\":{\"title\":\"Extended Guide: Instruction-tune Llama 2\"},\"slug\":\"instruction-tune-llama-2\"},{\"frontmatter\":{\"title\":\"LLaMA 2 - Every Resource you need\"},\"slug\":\"llama-2\"},{\"frontmatter\":{\"title\":\"Fine-tune LLaMA 2 (7-70B) on Amazon SageMaker\"},\"slug\":\"sagemaker-llama2-qlora\"},{\"frontmatter\":{\"title\":\"Train LLMs using QLoRA on Amazon SageMaker\"},\"slug\":\"sagemaker-falcon-qlora\"},{\"frontmatter\":{\"title\":\"Deploy LLMs with Hugging Face Inference Endpoints\"},\"slug\":\"endpoints-llm\"},{\"frontmatter\":{\"title\":\"Optimize \u0026 Deploy BERT on AWS inferentia2\"},\"slug\":\"optimize-deploy-bert-inf2\"},{\"frontmatter\":{\"title\":\"Securely deploy LLMs inside VPCs with Hugging Face and Amazon SageMaker\"},\"slug\":\"sagemaker-llm-vpc\"},{\"frontmatter\":{\"title\":\"Deploy Falcon 7B \u0026 40B on Amazon SageMaker\"},\"slug\":\"sagemaker-falcon-llm\"},{\"frontmatter\":{\"title\":\"Fine-tune BERT for Text Classification on AWS Trainium\"},\"slug\":\"getting-started-trainium\"},{\"frontmatter\":{\"title\":\"Introducing the Hugging Face LLM Inference Container for Amazon SageMaker\"},\"slug\":\"sagemaker-huggingface-llm\"},{\"frontmatter\":{\"title\":\"Generative AI for Document Understanding with Hugging Face and Amazon SageMaker\"},\"slug\":\"sagemaker-donut\"},{\"frontmatter\":{\"title\":\"How to scale LLM workloads to 20B+ with Amazon SageMaker using Hugging Face and PyTorch FSDP\"},\"slug\":\"sagemaker-fsdp-gpt\"},{\"frontmatter\":{\"title\":\"Setting up AWS Trainium for Hugging Face Transformers\"},\"slug\":\"setup-aws-trainium\"},{\"frontmatter\":{\"title\":\"Train and Deploy BLOOM with Amazon SageMaker and PEFT\"},\"slug\":\"bloom-sagemaker-peft\"},{\"frontmatter\":{\"title\":\"Introducing IGEL an instruction-tuned German large Language Model\"},\"slug\":\"introducing-igel\"},{\"frontmatter\":{\"title\":\"Efficient Large Language Model training with LoRA and Hugging Face\"},\"slug\":\"fine-tune-flan-t5-peft\"},{\"frontmatter\":{\"title\":\"Deploy FLAN-UL2 20B on Amazon SageMaker\"},\"slug\":\"deploy-flan-ul2-sagemaker\"},{\"frontmatter\":{\"title\":\"Getting started with Pytorch 2.0 and Hugging Face Transformers\"},\"slug\":\"getting-started-pytorch-2-0-transformers\"},{\"frontmatter\":{\"title\":\"Controlled text-to-image generation with ControlNet on Inference Endpoints\"},\"slug\":\"stable-diffusion-controlnet-endpoint\"},{\"frontmatter\":{\"title\":\"Combine Amazon SageMaker and DeepSpeed to fine-tune FLAN-T5 XXL\"},\"slug\":\"sagemaker-deepspeed\"},{\"frontmatter\":{\"title\":\"Fine-tune FLAN-T5 XL/XXL using DeepSpeed \u0026 Hugging Face Transformers\"},\"slug\":\"fine-tune-flan-t5-deepspeed\"},{\"frontmatter\":{\"title\":\"Deploy FLAN-T5 XXL on Amazon SageMaker\"},\"slug\":\"deploy-flan-t5-sagemaker\"},{\"frontmatter\":{\"title\":\"Hugging Face Transformers Examples\"},\"slug\":\"huggingface-transformers-examples\"},{\"frontmatter\":{\"title\":\"Getting started with Transformers and TPU using PyTorch\"},\"slug\":\"getting-started-tpu-transformers\"},{\"frontmatter\":{\"title\":\"Fine-tune FLAN-T5 for chat \u0026 dialogue summarization\"},\"slug\":\"fine-tune-flan-t5\"},{\"frontmatter\":{\"title\":\"Managed Transcription with OpenAI Whisper and Hugging Face Inference Endpoints\"},\"slug\":\"whisper-inference-endpoints\"},{\"frontmatter\":{\"title\":\"Stable Diffusion Inpainting example with Hugging Face inference Endpoints\"},\"slug\":\"stable-diffusion-inpainting-inference-endpoints\"},{\"frontmatter\":{\"title\":\"Stable Diffusion with Hugging Face Inference Endpoints\"},\"slug\":\"stable-diffusion-inference-endpoints\"},{\"frontmatter\":{\"title\":\"Document AI: LiLT a better language agnostic LayoutLM model\"},\"slug\":\"fine-tuning-lilt\"},{\"frontmatter\":{\"title\":\"Multi-Model GPU Inference with Hugging Face Inference Endpoints\"},\"slug\":\"multi-model-inference-endpoints\"},{\"frontmatter\":{\"title\":\"Serverless Machine Learning Applications with Hugging Face Gradio and AWS Lambda\"},\"slug\":\"serverless-gradio\"},{\"frontmatter\":{\"title\":\"Accelerate Stable Diffusion inference with DeepSpeed-Inference on GPUs\"},\"slug\":\"stable-diffusion-deepspeed-inference\"},{\"frontmatter\":{\"title\":\"Stable Diffusion on Amazon SageMaker\"},\"slug\":\"sagemaker-stable-diffusion\"},{\"frontmatter\":{\"title\":\"Deploy T5 11B for inference for less than $500\"},\"slug\":\"deploy-t5-11b\"},{\"frontmatter\":{\"title\":\"Outperform OpenAI GPT-3 with SetFit for text-classification\"},\"slug\":\"getting-started-setfit\"},{\"frontmatter\":{\"title\":\"Fine-tuning LayoutLM for document-understanding using Keras \u0026 Hugging Face Transformers \"},\"slug\":\"fine-tuning-layoutlm-keras\"},{\"frontmatter\":{\"title\":\"Deploy LayoutLM with Hugging Face Inference Endpoints\"},\"slug\":\"inference-endpoints-layoutlm\"},{\"frontmatter\":{\"title\":\"Document AI: Fine-tuning LayoutLM for document-understanding using Hugging Face Transformers \"},\"slug\":\"fine-tuning-layoutlm\"},{\"frontmatter\":{\"title\":\"Custom Inference with Hugging Face Inference Endpoints\"},\"slug\":\"custom-inference-handler\"},{\"frontmatter\":{\"title\":\"Accelerate GPT-J inference with DeepSpeed-Inference on GPUs\"},\"slug\":\"gptj-deepspeed-inference\"},{\"frontmatter\":{\"title\":\"Document AI: Fine-tuning Donut for document-parsing using Hugging Face Transformers\"},\"slug\":\"fine-tuning-donut\"},{\"frontmatter\":{\"title\":\"Use Sentence Transformers with TensorFlow\"},\"slug\":\"tensorflow-sentence-transformers\"},{\"frontmatter\":{\"title\":\"Pre-Training BERT with Hugging Face Transformers and Habana Gaudi\"},\"slug\":\"pre-training-bert-habana\"},{\"frontmatter\":{\"title\":\"Accelerate BERT inference with DeepSpeed-Inference on GPUs\"},\"slug\":\"bert-deepspeed-inference\"},{\"frontmatter\":{\"title\":\"Accelerate Sentence Transformers with Hugging Face Optimum\"},\"slug\":\"optimize-sentence-transformers\"},{\"frontmatter\":{\"title\":\"Deep Learning setup made easy with EC2 Remote Runner and Habana Gaudi\"},\"slug\":\"habana-gaudi-ec2-runner\"},{\"frontmatter\":{\"title\":\"Accelerate Vision Transformer (ViT) with Quantization using Optimum\"},\"slug\":\"optimizing-vision-transformer\"},{\"frontmatter\":{\"title\":\"Optimizing Transformers for GPUs with Optimum\"},\"slug\":\"optimizing-transformers-with-optimum-gpu\"},{\"frontmatter\":{\"title\":\"Hugging Face Transformers and Habana Gaudi AWS DL1 Instances\"},\"slug\":\"habana-distributed-training\"},{\"frontmatter\":{\"title\":\"Optimizing Transformers with Hugging Face Optimum\"},\"slug\":\"optimizing-transformers-with-optimum\"},{\"frontmatter\":{\"title\":\"Convert Transformers to ONNX with Hugging Face Optimum\"},\"slug\":\"convert-transformers-to-onnx\"},{\"frontmatter\":{\"title\":\"Setup Deep Learning environment for Hugging Face Transformers with Habana Gaudi on AWS\"},\"slug\":\"getting-started-habana-gaudi\"},{\"frontmatter\":{\"title\":\"Static Quantization with Hugging Face `optimum` for ~3x latency improvements\"},\"slug\":\"static-quantization-optimum\"},{\"frontmatter\":{\"title\":\"Advanced PII detection and anonymization with Hugging Face Transformers and Amazon SageMaker\"},\"slug\":\"pii-huggingface-sagemaker\"},{\"frontmatter\":{\"title\":\"An Amazon SageMaker Inference comparison with Hugging Face Transformers\"},\"slug\":\"sagemaker-inference-comparison\"},{\"frontmatter\":{\"title\":\"Semantic Segmantion with Hugging Face's Transformers \u0026 Amazon SageMaker\"},\"slug\":\"image-segmentation-sagemaker\"},{\"frontmatter\":{\"title\":\"Automatic Speech Recogntion with Hugging Face's Transformers \u0026 Amazon SageMaker\"},\"slug\":\"automatic-speech-recognition-sagemaker\"},{\"frontmatter\":{\"title\":\"Serverless Inference with Hugging Face's Transformers, DistilBERT and Amazon SageMaker\"},\"slug\":\"sagemaker-serverless-huggingface-distilbert\"},{\"frontmatter\":{\"title\":\"Accelerated document embeddings with Hugging Face Transformers and AWS Inferentia\"},\"slug\":\"huggingface-sentence-transformers-aws-inferentia\"},{\"frontmatter\":{\"title\":\"Save up to 90% training cost with AWS Spot Instances and Hugging Face Transformers\"},\"slug\":\"sagemaker-spot-instance\"},{\"frontmatter\":{\"title\":\"Speed up BERT inference with Hugging Face Transformers and AWS Inferentia\"},\"slug\":\"huggingface-bert-aws-inferentia\"},{\"frontmatter\":{\"title\":\"Creating document embeddings with Hugging Face's Transformers \u0026 Amazon SageMaker\"},\"slug\":\"custom-inference-huggingface-sagemaker\"},{\"frontmatter\":{\"title\":\"Autoscaling BERT with Hugging Face Transformers, Amazon SageMaker and Terraform module\"},\"slug\":\"terraform-huggingface-amazon-sagemaker-advanced\"},{\"frontmatter\":{\"title\":\"Multi-Container Endpoints with Hugging Face Transformers and Amazon SageMaker\"},\"slug\":\"sagemaker-huggingface-multi-container-endpoint\"},{\"frontmatter\":{\"title\":\"Asynchronous Inference with Hugging Face Transformers and Amazon SageMaker\"},\"slug\":\"sagemaker-huggingface-async-inference\"},{\"frontmatter\":{\"title\":\"Deploy BERT with Hugging Face Transformers, Amazon SageMaker and Terraform module\"},\"slug\":\"terraform-huggingface-amazon-sagemaker\"},{\"frontmatter\":{\"title\":\"Task-specific knowledge distillation for BERT using Transformers \u0026 Amazon SageMaker\"},\"slug\":\"knowledge-distillation-bert-transformers\"},{\"frontmatter\":{\"title\":\"Distributed training on multilingual BERT with Hugging Face Transformers \u0026 Amazon SageMaker\"},\"slug\":\"pytorch-distributed-training-transformers\"},{\"frontmatter\":{\"title\":\"Financial Text Summarization with Hugging Face Transformers, Keras \u0026 Amazon SageMaker\"},\"slug\":\"financial-summarizatio-huggingface-keras\"},{\"frontmatter\":{\"title\":\"Deploy GPT-J 6B for inference using  Hugging Face Transformers and Amazon SageMaker\"},\"slug\":\"deploy-gptj-sagemaker\"},{\"frontmatter\":{\"title\":\"Image Classification with Hugging Face Transformers and `Keras` \"},\"slug\":\"image-classification-huggingface-transformers-keras\"},{\"frontmatter\":{\"title\":\"Workshop: Enterprise-Scale NLP with Hugging Face \u0026 Amazon SageMaker\"},\"slug\":\"hugginface-sagemaker-workshop\"},{\"frontmatter\":{\"title\":\"Hugging Face Transformers with Keras: Fine-tune a non-English BERT for Named Entity Recognition\"},\"slug\":\"huggingface-transformers-keras-tf\"},{\"frontmatter\":{\"title\":\"New Serverless Transformers using Amazon SageMaker Serverless Inference and Hugging Face\"},\"slug\":\"serverless-transformers-sagemaker-huggingface\"},{\"frontmatter\":{\"title\":\"Hugging Face Transformers BERT fine-tuning using Amazon SageMaker and Training Compiler\"},\"slug\":\"huggingface-amazon-sagemaker-training-compiler\"},{\"frontmatter\":{\"title\":\"MLOps: Using the Hugging Face Hub as model registry with Amazon SageMaker\"},\"slug\":\"huggingface-hub-amazon-sagemaker\"},{\"frontmatter\":{\"title\":\"A remote guide to re:Invent 2021 machine learning sessions\"},\"slug\":\"re-invent-2021\"},{\"frontmatter\":{\"title\":\"MLOps: End-to-End Hugging Face Transformers with the Hub \u0026 SageMaker Pipelines\"},\"slug\":\"mlops-sagemaker-huggingface-transformers\"},{\"frontmatter\":{\"title\":\"Going Production: Auto-scaling Hugging Face Transformers with Amazon SageMaker\"},\"slug\":\"auto-scaling-sagemaker-huggingface\"},{\"frontmatter\":{\"title\":\"Deploy BigScience T0_3B to AWS \u0026 Amazon SageMaker\"},\"slug\":\"deploy-bigscience-t0-3b-to-aws-and-amazon-sagemaker\"},{\"frontmatter\":{\"title\":\"Scalable, Secure Hugging Face Transformer Endpoints with Amazon SageMaker, AWS Lambda, and CDK\"},\"slug\":\"huggingface-transformers-cdk-sagemaker-lambda\"},{\"frontmatter\":{\"title\":\"Few-shot learning in practice with GPT-Neo\"},\"slug\":\"few-shot-learning-gpt-neo\"},{\"frontmatter\":{\"title\":\"Distributed Training: Train BART/T5 for Summarization using 🤗 Transformers and Amazon SageMaker\"},\"slug\":\"sagemaker-distributed-training\"},{\"frontmatter\":{\"title\":\"Multilingual Serverless XLM RoBERTa with HuggingFace, AWS Lambda\"},\"slug\":\"multilingual-serverless-xlm-roberta-with-huggingface\"},{\"frontmatter\":{\"title\":\"Serverless BERT with HuggingFace, AWS Lambda, and Docker\"},\"slug\":\"serverless-bert-with-huggingface-aws-lambda-docker\"},{\"frontmatter\":{\"title\":\"AWS Lambda with custom docker images as runtime\"},\"slug\":\"aws-lambda-with-custom-docker-image\"},{\"frontmatter\":{\"title\":\"New Serverless BERT with Huggingface, AWS Lambda, and AWS EFS\"},\"slug\":\"new-serverless-bert-with-huggingface-aws-lambda\"},{\"frontmatter\":{\"title\":\"efsync my first open-source MLOps toolkit\"},\"slug\":\"efsync-my-first-open-source-mlops-toolkit\"},{\"frontmatter\":{\"title\":\"My path to become a certified solution architect\"},\"slug\":\"my-path-to-become-a-certified-solution-architect\"},{\"frontmatter\":{\"title\":\"Create custom Github Action in 4 steps\"},\"slug\":\"create-custom-github-action-in-4-steps\"},{\"frontmatter\":{\"title\":\"Fine-tune a non-English GPT-2 Model with Huggingface\"},\"slug\":\"fine-tune-a-non-english-gpt-2-model-with-huggingface\"},{\"frontmatter\":{\"title\":\"Mount your AWS EFS volume into AWS Lambda with the Serverless Framework\"},\"slug\":\"mount-your-aws-efs-volume-into-aws-lambda-with-the-serverless-framework\"},{\"frontmatter\":{\"title\":\"Serverless BERT with HuggingFace and AWS Lambda\"},\"slug\":\"serverless-bert-with-huggingface-and-aws-lambda\"},{\"frontmatter\":{\"title\":\"How to use Google Tag Manager and Google Analytics without Cookies\"},\"slug\":\"how-to-use-google-tag-manager-and-google-analytics-without-cookies\"},{\"frontmatter\":{\"title\":\"BERT Text Classification in a different language\"},\"slug\":\"bert-text-classification-in-a-different-language\"},{\"frontmatter\":{\"title\":\"Scaling Machine Learning from ZERO to HERO\"},\"slug\":\"scaling-machine-learning-from-zero-to-hero\"},{\"frontmatter\":{\"title\":\"Getting Started with AutoML and AWS AutoGluon\"},\"slug\":\"getting-started-with-automl-and-aws-autogluon\"},{\"frontmatter\":{\"title\":\"K-Fold as Cross-Validation with a BERT Text-Classification Example\"},\"slug\":\"k-fold-as-cross-validation-with-a-bert-text-classification-example\"},{\"frontmatter\":{\"title\":\"How to Set Up a CI/CD Pipeline for AWS Lambda With GitHub Actions and Serverless\"},\"slug\":\"how-to-set-up-a-ci-cd-pipeline-for-aws-lambda-with-github-actions-and-serverless\"},{\"frontmatter\":{\"title\":\"Set up a CI/CD Pipeline for your Web app on AWS with Github Actions\"},\"slug\":\"set-up-a-ci-cd-pipeline-for-your-web-app-on-aws-s3-with-github-actions\"},{\"frontmatter\":{\"title\":\"Getting started with CNNs by calculating LeNet-Layer manually\"},\"slug\":\"getting-started-with-cnn-by-calculating-lenet-layer-manually\"},{\"frontmatter\":{\"title\":\"Google Colab the free GPU/TPU Jupyter Notebook Service\"},\"slug\":\"google-cola-the-free-gpu-jupyter\"}]}],[\"$\",\"$L1a\",null,{}]]}]}]\n"])</script><script>self.__next_f.push([1,"12:[[\"$\",\"meta\",\"0\",{\"name\":\"viewport\",\"content\":\"width=device-width, initial-scale=1\"}],[\"$\",\"meta\",\"1\",{\"name\":\"theme-color\",\"media\":\"(prefers-color-scheme: light)\",\"content\":\"white\"}],[\"$\",\"meta\",\"2\",{\"name\":\"theme-color\",\"media\":\"(prefers-color-scheme: dark)\",\"content\":\"black\"}],[\"$\",\"meta\",\"3\",{\"charSet\":\"utf-8\"}],[\"$\",\"title\",\"4\",{\"children\":\"Model Context Protocol (MCP) an overview\"}],[\"$\",\"meta\",\"5\",{\"name\":\"description\",\"content\":\"Overview of the Model Context Protocol (MCP) how it works, what are MCP servers and clients, and how to use it.\"}],[\"$\",\"meta\",\"6\",{\"name\":\"author\",\"content\":\"Philipp Schmid\"}],[\"$\",\"meta\",\"7\",{\"property\":\"og:title\",\"content\":\"Model Context Protocol (MCP) an overview\"}],[\"$\",\"meta\",\"8\",{\"property\":\"og:description\",\"content\":\"Overview of the Model Context Protocol (MCP) how it works, what are MCP servers and clients, and how to use it.\"}],[\"$\",\"meta\",\"9\",{\"property\":\"og:url\",\"content\":\"https://www.philschmid.de/mcp-introduction\"}],[\"$\",\"meta\",\"10\",{\"property\":\"og:image\",\"content\":\"https://www.philschmid.de/static/blog/mcp-introduction/thumbnail.jpg\"}],[\"$\",\"meta\",\"11\",{\"property\":\"og:image:width\",\"content\":\"1200\"}],[\"$\",\"meta\",\"12\",{\"property\":\"og:image:height\",\"content\":\"630\"}],[\"$\",\"meta\",\"13\",{\"property\":\"og:image:alt\",\"content\":\"Model Context Protocol (MCP) an overview\"}],[\"$\",\"meta\",\"14\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"$\",\"meta\",\"15\",{\"property\":\"article:published_time\",\"content\":\"2025-04-03\"}],[\"$\",\"meta\",\"16\",{\"name\":\"twitter:card\",\"content\":\"summary_large_image\"}],[\"$\",\"meta\",\"17\",{\"name\":\"twitter:title\",\"content\":\"Model Context Protocol (MCP) an overview\"}],[\"$\",\"meta\",\"18\",{\"name\":\"twitter:description\",\"content\":\"Overview of the Model Context Protocol (MCP) how it works, what are MCP servers and clients, and how to use it.\"}],[\"$\",\"meta\",\"19\",{\"name\":\"twitter:image\",\"content\":\"https://www.philschmid.de/static/blog/mcp-introduction/thumbnail.jpg\"}],[\"$\",\"link\",\"20\",{\"rel\":\"icon\",\"href\":\"/favicon.ico\",\"type\":\"image/x-icon\",\"sizes\":\"256x256\"}],[\"$\",\"meta\",\"21\",{\"name\":\"next-size-adjust\"}]]\n"])</script><script>self.__next_f.push([1,"7:null\n"])</script><script>self.__next_f.push([1,"1b:I[1854,[\"258\",\"static/chunks/258-9289ebf35b1e02b1.js\",\"749\",\"static/chunks/749-5722e1b9889608f0.js\",\"42\",\"static/chunks/app/%5Bslug%5D/page-487423f7cd3c1a71.js\"],\"Pre\"]\n"])</script><script>self.__next_f.push([1,"16:[[\"$\",\"p\",null,{\"children\":[\"The \",[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"href\":\"https://modelcontextprotocol.io/introduction\",\"children\":\"Model Context Protocol\"}],\" (MCP) is an open standard \",[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"href\":\"https://www.anthropic.com/news/model-context-protocol\",\"children\":\"introduced by Anthropic\"}],\" with the goal to standardize how AI applications (chatbots, IDE assistants, or custom agents) connect with external tools, data sources, and systems.\"]}],\"\\n\",[\"$\",\"p\",null,{\"children\":[\"$\",\"img\",null,{\"src\":\"/static/blog/mcp-introduction/api.png\",\"alt\":\"api\"}]}],\"\\n\",[\"$\",\"p\",null,{\"children\":[\"Think of it like USB for AI integrations. Before standards like USB, connecting peripherals required a mess of different ports and custom drivers. Similarly, integrating AI applications with external tools and systems is/was an \\\"M×N problem\\\".\",[\"$\",\"br\",null,{}],\"\\n\",\"If you have M different AI applications (Chat, RAG 1, custom agents, etc.) and N different tools/systems (GitHub, Slack, Asana, databases, etc.), you might need to build M×N different integrations. This leads to duplicated effort across teams, inconsistent implementations.\"]}],\"\\n\",[\"$\",\"p\",null,{\"children\":\"MCP aims to simplify this by providing a common API and transforming this into an \\\"M+N problem\\\". Tool creators build N MCP servers (one for each system), while application developers build M MCP clients (one for each AI application). MCP defines a client-server architecture where:\"}],\"\\n\",[\"$\",\"ul\",null,{\"children\":[\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Hosts:\"}],\" Applications the user interacts with (e.g., Claude Desktop, an IDE like Cursor, a custom agent).\"]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Clients:\"}],\" Live within the Host application and manage the connection to one specific MCP server. Maintain a 1:1 to connection.\"]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Servers:\"}],\" External programs that expose Tools, Resources and Prompts via standard API to the AI model via the client.\"]}],\"\\n\"]}],\"\\n\",[\"$\",\"p\",null,{\"children\":\"The current components of MCP servers include:\"}],\"\\n\",[\"$\",\"ol\",null,{\"children\":[\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Tools  (Model-controlled):\"}],\" These are functions (tools) that LLMs can call to perform specific actions, e.g. weather API, basically function calling\"]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Resources  (Application-controlled):\"}],\" These are data sources that LLMs can access, similar to GET endpoints in a REST API. Resources provide data without performing significant computation, no side effects. Part of the context/request\"]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Prompts (User-controlled):\"}],\" These are pre-defined templates to use tools or resources in the most optimal way. Selected before running inference\"]}],\"\\n\"]}],\"\\n\",[\"$\",\"p\",null,{\"children\":[\"$\",\"img\",null,{\"src\":\"/static/blog/mcp-introduction/overview.png\",\"alt\":\"overview\"}]}],\"\\n\",[\"$\",\"h2\",null,{\"id\":\"how-does-mcp-work\",\"children\":[[\"$\",\"a\",null,{\"href\":\"#how-does-mcp-work\",\"aria-hidden\":\"true\",\"tabIndex\":\"-1\",\"children\":[\"$\",\"span\",null,{\"className\":\"icon icon-link\"}]}],\"How does MCP work?\"]}],\"\\n\",[\"$\",\"p\",null,{\"children\":\"MCP operates on the client-server model described earlier. Here’s a simplified flow:\"}],\"\\n\",[\"$\",\"p\",null,{\"children\":[\"$\",\"img\",null,{\"src\":\"/static/blog/mcp-introduction/architecture.png\",\"alt\":\"architecture\"}]}],\"\\n\",[\"$\",\"ol\",null,{\"children\":[\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Initialization:\"}],\" When a Host application starts it creates N MCP Clients, which exchange information about capabilities and protocol versions via a handshake.\"]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Discovery:\"}],\" Clients requests what capabilities (Tools, Resources, Prompts) the server offers. The Server responds with a list and descriptions.\"]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Context Provision:\"}],\" The Host application can now make resources and prompts available to the user or parses the tools into a LLM compatible format, e.g. JSON Function calling\"]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Invocation:\"}],\" If the LLM determines it needs to use a Tool (e.g., based on the user's request like \\\"What are the open issues in the 'X' repo?\\\"), the Host directs the Client to send an invocation request to the appropriate Server.\"]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Execution:\"}],\" The Server receives the request (e.g., fetch_github_issues with repo 'X'), executes the underlying logic (calls the GitHub API), and gets the result.\"]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Response:\"}],\" The Server sends the result back to the Client.\"]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Completion:\"}],\" The Client relays the result to the Host, which incorporates it into the LLM's context, allowing the LLM to generate a final response for the user based on the fresh, external information.\"]}],\"\\n\"]}],\"\\n\",[\"$\",\"h3\",null,{\"id\":\"mcp-servers\",\"children\":[[\"$\",\"a\",null,{\"href\":\"#mcp-servers\",\"aria-hidden\":\"true\",\"tabIndex\":\"-1\",\"children\":[\"$\",\"span\",null,{\"className\":\"icon icon-link\"}]}],\"MCP servers\"]}],\"\\n\",[\"$\",\"p\",null,{\"children\":\"MCP Servers are the bridge/API between the MCP world and the specific functionality of an external system (an API, a database, local files, etc.). They are essentially wrappers that expose these external capabilities according to the MCP specification.\"}],\"\\n\",[\"$\",\"p\",null,{\"children\":\"Servers  can be built in various languages (Python, TypeScript, Java, Rust, etc.) as long as they can communicate over the supported transports. Servers communicate with clients primarily via two methods:\"}],\"\\n\",[\"$\",\"ul\",null,{\"children\":[\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"stdio (Standard Input/Output):\"}],\" Used when Client and Server run on the same machines. This is simple and effective for local integrations (e.g., accessing local files or running a local script).\"]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"HTTP via SSE (Server-Sent Events):\"}],\" The Client connects to the Server via HTTP. After an initial setup, the Server can push messages (events) to the Client over a persistent connection using the SSE standard.\"]}],\"\\n\"]}],\"\\n\",[\"$\",\"p\",null,{\"children\":[\"Example of how to build an MCP server with Python and \",[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"href\":\"https://github.com/jlowin/fastmcp/tree/main\",\"children\":\"FastMCP\"}],\":\"]}],\"\\n\",[\"$\",\"figure\",null,{\"data-rehype-pretty-code-figure\":\"\",\"children\":[\"$\",\"$L1b\",null,{\"style\":{\"--shiki-dark\":\"#e1e4e8\",\"--shiki-light\":\"#24292e\",\"--shiki-dark-bg\":\"#24292e\",\"--shiki-light-bg\":\"#fff\"},\"tabIndex\":\"0\",\"data-language\":\"py\",\"data-theme\":\"github-dark github-light\",\"children\":[\"$\",\"code\",null,{\"data-language\":\"py\",\"data-theme\":\"github-dark github-light\",\"style\":{\"display\":\"grid\"},\"children\":[[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"from\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" fastmcp \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"import\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" FastMCP\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"# Create an MCP server\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"mcp \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" FastMCP(\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"Demo\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\")\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"# Add a tool, will be converted into JSON spec for function calling\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#B392F0\",\"--shiki-light\":\"#6F42C1\"},\"children\":\"@mcp.tool\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"()\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"def\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#B392F0\",\"--shiki-light\":\"#6F42C1\"},\"children\":\" add\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"(a: \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"int\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\", b: \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"int\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\") -\u003e \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"int\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\":\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"    \\\"\\\"\\\"Add two numbers\\\"\\\"\\\"\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"    return\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" a \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"+\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" b\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"# Add a data resource, e.g. displayed on new chats\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#B392F0\",\"--shiki-light\":\"#6F42C1\"},\"children\":\"@mcp.resource\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"(\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"greeting://\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"{name}\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\")\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"def\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#B392F0\",\"--shiki-light\":\"#6F42C1\"},\"children\":\" get_greeting\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"(name: \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"str\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\") -\u003e \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"str\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\":\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"    \\\"\\\"\\\"Get a personalized greeting\\\"\\\"\\\"\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"    return\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" f\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"Hello, \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"{\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"name\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"}\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"!\\\"\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"# Specific prompt templates for better use\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#B392F0\",\"--shiki-light\":\"#6F42C1\"},\"children\":\"@mcp.prompt\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"()\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"def\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#B392F0\",\"--shiki-light\":\"#6F42C1\"},\"children\":\" review_code\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"(code: \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"str\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\") -\u003e \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"str\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\":\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"    return\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" f\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"Please review this code:\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"\\\\n\\\\n{\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"code\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"}\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"\"}]]}]]}]}]}],\"\\n\",[\"$\",\"p\",null,{\"children\":\"List of pre-build and community build MCP servers:\"}],\"\\n\",[\"$\",\"ul\",null,{\"children\":[\"\\n\",[\"$\",\"li\",null,{\"children\":[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"href\":\"https://github.com/punkpeye/awesome-mcp-servers\",\"children\":\"https://github.com/punkpeye/awesome-mcp-servers\"}]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"href\":\"https://github.com/modelcontextprotocol/servers\",\"children\":\"https://github.com/modelcontextprotocol/servers\"}]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"href\":\"https://mcp.composio.dev/\",\"children\":\"https://mcp.composio.dev/\"}]}],\"\\n\"]}],\"\\n\",[\"$\",\"h3\",null,{\"id\":\"mcp-clients\",\"children\":[[\"$\",\"a\",null,{\"href\":\"#mcp-clients\",\"aria-hidden\":\"true\",\"tabIndex\":\"-1\",\"children\":[\"$\",\"span\",null,{\"className\":\"icon icon-link\"}]}],\"MCP Clients\"]}],\"\\n\",[\"$\",\"p\",null,{\"children\":\"MCP Clients are part of Host applications (the IDE, chatbot, etc.) that manage the communication with a specific MCP Server.\"}],\"\\n\",[\"$\",\"ul\",null,{\"children\":[\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Role:\"}],\" Handle connection management, capability discovery, request forwarding, and response handling according to the MCP spec.\"]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Examples of Hosts/Clients:\"}],\"\\n\",[\"$\",\"ul\",null,{\"children\":[\"\\n\",[\"$\",\"li\",null,{\"children\":\"UI Apps: Claude Desktop, Microsoft Copilot Studio, LibreChat, Claude Code\"}],\"\\n\",[\"$\",\"li\",null,{\"children\":\"IDEs: Cursor, Windsurf, Continue, Zed, Cline\"}],\"\\n\",[\"$\",\"li\",null,{\"children\":[\"Custom Agents (Python/TypeScript):\",\"\\n\",[\"$\",\"ul\",null,{\"children\":[\"\\n\",[\"$\",\"li\",null,{\"children\":\"Firebase Genkit\"}],\"\\n\",[\"$\",\"li\",null,{\"children\":\"LangGraph\"}],\"\\n\",[\"$\",\"li\",null,{\"children\":\"OpenAI agents sdk\"}],\"\\n\",[\"$\",\"li\",null,{\"children\":\"….\"}],\"\\n\"]}],\"\\n\"]}],\"\\n\"]}],\"\\n\"]}],\"\\n\"]}],\"\\n\",[\"$\",\"p\",null,{\"children\":\"Example of how to build an MCP client with Python and mcp.\"}],\"\\n\",[\"$\",\"figure\",null,{\"data-rehype-pretty-code-figure\":\"\",\"children\":[\"$\",\"$L1b\",null,{\"style\":{\"--shiki-dark\":\"#e1e4e8\",\"--shiki-light\":\"#24292e\",\"--shiki-dark-bg\":\"#24292e\",\"--shiki-light-bg\":\"#fff\"},\"tabIndex\":\"0\",\"data-language\":\"py\",\"data-theme\":\"github-dark github-light\",\"children\":[\"$\",\"code\",null,{\"data-language\":\"py\",\"data-theme\":\"github-dark github-light\",\"style\":{\"display\":\"grid\"},\"children\":[[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"from\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" mcp \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"import\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" ClientSession, StdioServerParameters, types\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"from\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" mcp.client.stdio \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"import\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" stdio_client\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"# Commands for running/connecting to MCP Server\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"server_params \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" StdioServerParameters(\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"    command\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"python\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\",  \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"# Executable\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"    args\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"[\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"example_server.py\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"],  \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"# Optional command line arguments\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"    env\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"None\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\",  \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"# Optional environment variables\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\")\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"async\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" with\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" stdio_client(server_params) \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"as\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" (read, write):\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"    async\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" with\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" ClientSession(\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        read, write, \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"sampling_callback\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"handle_sampling_message\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"    ) \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"as\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" session:\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"        # Initialize the connection\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"        await\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" session.initialize()\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"        # List available prompts\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        prompts \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" await\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" session.list_prompts()\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"        # Get a prompt\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        prompt \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" await\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" session.get_prompt(\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"            \\\"example-prompt\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\", \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"arguments\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"{\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"arg1\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\": \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"value\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"}\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        )\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"        # List available resources\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        resources \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" await\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" session.list_resources()\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"        # List available tools\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        tools \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" await\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" session.list_tools()\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"        # Read a resource\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        content, mime_type \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" await\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" session.read_resource(\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"file://some/path\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\")\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"        # Call a tool\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        result \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" await\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" session.call_tool(\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"tool-name\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\", \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"arguments\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"{\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"arg1\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\": \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"value\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"})\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}]]}]}]}],\"\\n\",[\"$\",\"h2\",null,{\"id\":\"why-is-there-so-much-hype-did-mcp-win\",\"children\":[[\"$\",\"a\",null,{\"href\":\"#why-is-there-so-much-hype-did-mcp-win\",\"aria-hidden\":\"true\",\"tabIndex\":\"-1\",\"children\":[\"$\",\"span\",null,{\"className\":\"icon icon-link\"}]}],\"Why is there so much hype? Did MCP win?\"]}],\"\\n\",[\"$\",\"p\",null,{\"children\":\"While Anthropic announced MCP in late 2024, its momentum significantly accelerated in early 2025. This isn't just random hype; several factors converged:\"}],\"\\n\",[\"$\",\"ul\",null,{\"children\":[\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"\\\"AI-Native\\\"\"}],\" while older standards like OpenAPI, GraphQL, or SOAP exist for API interaction, MCP was designed specifically for the needs of modern AI agents. MCP refines patterns seen in agent development:\",\"\\n\",[\"$\",\"ul\",null,{\"children\":[\"\\n\",[\"$\",\"li\",null,{\"children\":\"Tools (Model-controlled): Actions the AI decides to take.\"}],\"\\n\",[\"$\",\"li\",null,{\"children\":\"Resources (Application-controlled): Context provided to the AI.\"}],\"\\n\",[\"$\",\"li\",null,{\"children\":\"Prompts (User-controlled): Specific user-invoked interactions.\"}],\"\\n\"]}],\"\\n\"]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"\\\"Open Standard\\\" with a Big Backer:\"}],\" Any \\\"open standard” should have a spec, and \",[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"href\":\"https://spec.modelcontextprotocol.io/specification/2024-11-05/\",\"children\":\"MCP has a VERY good spec\"}],\". The spec alone defeats a lot of contenders, who do not provide such detailed specs.\"]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Built on Proven Foundations:\"}],\" Instead of re-inventing everything from scratch, Anthropic adapted from Language Server Protocol (LSP), e.g. \",[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"href\":\"https://www.jsonrpc.org/\",\"children\":\"JSON-RPC 2.0\"}]]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Strong Initial Ecosystem \u0026 Dogfooding:\"}],\" MCP didn't launch as just a spec. Anthropic \\\"dogfooded\\\" it extensively and released it with a comprehensive initial set:\",\"\\n\",[\"$\",\"ul\",null,{\"children\":[\"\\n\",[\"$\",\"li\",null,{\"children\":\"Client: Claude Desktop.\"}],\"\\n\",[\"$\",\"li\",null,{\"children\":\"Servers: Numerous reference implementations (filesystem, git, Slack, etc.).\"}],\"\\n\",[\"$\",\"li\",null,{\"children\":\"Tooling: MCP Inspector for testing, great documentation\"}],\"\\n\",[\"$\",\"li\",null,{\"children\":\"SDKs: Python and TypeScript libraries, now Java, Kotlin C#\"}],\"\\n\"]}],\"\\n\"]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Network Effects:\"}],\" The open nature fostered a community. Tools like Cursor and Windsurf integrated MCP. Companies like Composio provided pre-built servers for hundreds of integrations. OpenAI announced support for MCP. Developers built thousands of community MCP servers (GitHub, Slack, databases, Docker, etc.).\"]}],\"\\n\"]}],\"\\n\",[\"$\",\"h2\",null,{\"id\":\"practical-example-with-gemini-and-python-usdk\",\"children\":[[\"$\",\"a\",null,{\"href\":\"#practical-example-with-gemini-and-python-usdk\",\"aria-hidden\":\"true\",\"tabIndex\":\"-1\",\"children\":[\"$\",\"span\",null,{\"className\":\"icon icon-link\"}]}],\"Practical Example with Gemini and Python uSDK\"]}],\"\\n\",[\"$\",\"figure\",null,{\"data-rehype-pretty-code-figure\":\"\",\"children\":[\"$\",\"$L1b\",null,{\"style\":{\"--shiki-dark\":\"#e1e4e8\",\"--shiki-light\":\"#24292e\",\"--shiki-dark-bg\":\"#24292e\",\"--shiki-light-bg\":\"#fff\"},\"tabIndex\":\"0\",\"data-language\":\"py\",\"data-theme\":\"github-dark github-light\",\"children\":[\"$\",\"code\",null,{\"data-language\":\"py\",\"data-theme\":\"github-dark github-light\",\"style\":{\"display\":\"grid\"},\"children\":[[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"from\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" typing \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"import\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" List\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"from\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" google \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"import\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" genai\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"from\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" google.genai \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"import\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" types\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"from\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" mcp \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"import\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" ClientSession, StdioServerParameters\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"from\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" mcp.client.stdio \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"import\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" stdio_client\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"import\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" os\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"client \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" genai.Client(\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"api_key\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"os.getenv(\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"GEMINI_API_KEY\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"))\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"model \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\" \\\"gemini-2.0-flash\\\"\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"# Create server parameters for stdio connection\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"server_params \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" StdioServerParameters(\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"    command\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"npx\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\",  \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"# Executable\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"    args\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"[\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"        \\\"-y\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\",\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"        \\\"@openbnb/mcp-server-airbnb\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\",\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"    ],  \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"# Optional command line arguments\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"    env\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"None\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\",  \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"# Optional environment variables\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\")\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"async\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" def\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#B392F0\",\"--shiki-light\":\"#6F42C1\"},\"children\":\" agent_loop\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"(prompt: \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"str\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\", client: genai.Client, session: ClientSession):\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"    contents \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" [types.Content(\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"role\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"user\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\", \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"parts\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"[types.Part(\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"text\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"prompt)])]\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"    # Initialize the connection\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"    await\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" session.initialize()\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"    \"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"    # --- 1. Get Tools from Session and convert to Gemini Tool objects ---\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"    mcp_tools \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" await\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" session.list_tools()\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"    tools \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" types.Tool(\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"function_declarations\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"[\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        {\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"            \\\"name\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\": tool.name,\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"            \\\"description\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\": tool.description,\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"            \\\"parameters\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\": tool.inputSchema,\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        }\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"        for\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" tool \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"in\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" mcp_tools.tools\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"    ])\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"    \"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"    # --- 2. Initial Request with user prompt and function declarations ---\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"    response \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" await\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" client.aio.models.generate_content(\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"        model\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"model,  \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"# Or your preferred model supporting function calling\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"        contents\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"contents,\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"        config\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"types.GenerateContentConfig(\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"            temperature\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"0\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\",\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"            tools\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"[tools],\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        ),  \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"# Example other config\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"    )\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"    \"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"    # --- 3. Append initial response to contents ---\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"    contents.append(response.candidates[\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"0\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"].content)\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"    # --- 4. Tool Calling Loop ---            \"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"    turn_count \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\" 0\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"    max_tool_turns \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\" 5\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"    while\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" response.function_calls \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"and\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" turn_count \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"\u003c\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" max_tool_turns:\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        turn_count \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"+=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\" 1\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        tool_response_parts: List[types.Part] \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" []\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"        # --- 4.1 Process all function calls in order and return in this turn ---\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"        for\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" fc_part \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"in\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" response.function_calls:\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"            tool_name \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" fc_part.name\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"            args \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" fc_part.args \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"or\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" {}  \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"# Ensure args is a dict\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"            print\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"(\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"f\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"Attempting to call MCP tool: '\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"{\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"tool_name\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"}\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"' with args: \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"{\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"args\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"}\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\")\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"            tool_response: \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"dict\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"            try\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\":\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"                # Call the session's tool executor\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"                tool_result \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" await\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" session.call_tool(tool_name, args)\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"                print\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"(\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"f\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"MCP tool '\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"{\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"tool_name\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"}\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"' executed successfully.\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\")\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"                if\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" tool_result.isError:\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"                    tool_response \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" {\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"error\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\": tool_result.content[\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"0\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"].text}\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"                else\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\":\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"                    tool_response \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" {\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"result\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\": tool_result.content[\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"0\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"].text}\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"            except\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\" Exception\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" as\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" e:\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"                tool_response \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" {\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"error\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\":  \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"f\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"Tool execution failed: \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"{type\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"(e).\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"__name__}\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\": \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"{\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"e\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"}\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"}\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"            \"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"            # Prepare FunctionResponse Part\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"            tool_response_parts.append(\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"                types.Part.from_function_response(\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"                    name\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"tool_name, \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"response\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"tool_response\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"                )\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"            )\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"        # --- 4.2 Add the tool response(s) to history ---\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        contents.append(types.Content(\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"role\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"user\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\", \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"parts\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"tool_response_parts))\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"        print\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"(\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"f\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"Added \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"{len\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"(tool_response_parts)\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"}\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\" tool response parts to history.\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\")\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"        # --- 4.3 Make the next call to the model with updated history ---\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"        print\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"(\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"Making subsequent API call with tool responses...\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\")\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        response \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" await\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" client.aio.models.generate_content(\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"            model\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"model,\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"            contents\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"contents,  \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"# Send updated history\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"            config\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"types.GenerateContentConfig(\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"                temperature\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"1.0\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\",\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#FFAB70\",\"--shiki-light\":\"#E36209\"},\"children\":\"                tools\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"[tools],\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"            ),  \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"# Keep sending same config\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        )\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        contents.append(response.candidates[\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"0\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"].content)\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"    if\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" turn_count \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"\u003e=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" max_tool_turns \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"and\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" response.function_calls:\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"        print\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"(\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"f\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"Maximum tool turns (\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"{\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"max_tool_turns\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"}\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\") reached. Exiting loop.\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\")\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":\" \"}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"    print\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"(\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"MCP tool calling loop finished. Returning final response.\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\")\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"    # --- 5. Return Final Response ---\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"    return\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" response\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        \"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"async\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" def\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#B392F0\",\"--shiki-light\":\"#6F42C1\"},\"children\":\" run\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"():\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"    async\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" with\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" stdio_client(server_params) \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"as\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" (read, write):\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"        async\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" with\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" ClientSession(\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"            read,\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"            write,\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"        ) \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"as\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" session:\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"            # Test prompt\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"            prompt \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\" \\\"I want to book an apartment in Paris for 2 nights. 03/28 - 03/30\\\"\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"            print\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"(\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"f\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"Running agent loop with prompt: \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"{\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"prompt\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"}\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#9ECBFF\",\"--shiki-light\":\"#032F62\"},\"children\":\"\\\"\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\")\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#6A737D\",\"--shiki-light\":\"#6A737D\"},\"children\":\"            # Run agent loop\"}]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"            res \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" await\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" agent_loop(prompt, client, session)\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"            return\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" res\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"res \"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\"=\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#F97583\",\"--shiki-light\":\"#D73A49\"},\"children\":\" await\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\" run()\"}]]}],\"\\n\",[\"$\",\"span\",null,{\"data-line\":\"\",\"children\":[[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#79B8FF\",\"--shiki-light\":\"#005CC5\"},\"children\":\"print\"}],[\"$\",\"span\",null,{\"style\":{\"--shiki-dark\":\"#E1E4E8\",\"--shiki-light\":\"#24292E\"},\"children\":\"(res.text)\"}]]}]]}]}]}],\"\\n\",[\"$\",\"h2\",null,{\"id\":\"what-about-security-updates-authentication\",\"children\":[[\"$\",\"a\",null,{\"href\":\"#what-about-security-updates-authentication\",\"aria-hidden\":\"true\",\"tabIndex\":\"-1\",\"children\":[\"$\",\"span\",null,{\"className\":\"icon icon-link\"}]}],\"What about Security, Updates, Authentication?\"]}],\"\\n\",[\"$\",\"p\",null,{\"children\":\"MCP is a living protocol. The specification is actively maintained on GitHub, last update from 03/26 improves security, scalability, and usability.\"}],\"\\n\",[\"$\",\"ul\",null,{\"children\":[\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Authentication \u0026 Security (OAuth 2.1):\"}],\" The protocol now mandates the OAuth 2.1 framework for authenticating remote HTTP servers\"]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Improved Transport \u0026 Efficiency:\"}],\" The previous HTTP+SSE transport will be replaced with a more flexible Streamable HTTP transport and support for JSON-RPC batching.\"]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[[\"$\",\"strong\",null,{\"children\":\"Richer Context \u0026 Control:\"}],\" New tool annotations provide more metadata about a tool's behavior (e.g., read-only vs. destructive)\"]}],\"\\n\"]}],\"\\n\",[\"$\",\"h2\",null,{\"id\":\"acknowledgements\",\"children\":[[\"$\",\"a\",null,{\"href\":\"#acknowledgements\",\"aria-hidden\":\"true\",\"tabIndex\":\"-1\",\"children\":[\"$\",\"span\",null,{\"className\":\"icon icon-link\"}]}],\"Acknowledgements\"]}],\"\\n\",[\"$\",\"p\",null,{\"children\":\"This overview was compiled with the help of deep and manual research, drawing inspiration and information from several excellent resources, including:\"}],\"\\n\",[\"$\",\"ul\",null,{\"children\":[\"\\n\",[\"$\",\"li\",null,{\"children\":[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"href\":\"https://huggingface.co/blog/Kseniase/mcp\",\"children\":\"What Is MCP, and Why Is Everyone – Suddenly!– Talking About It?\"}]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"href\":\"https://python.useinstructor.com/blog/2025/03/27/understanding-model-context-protocol-mcp/#conclusion\",\"children\":\"What is MCP\"}]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"href\":\"https://www.youtube.com/watch?v=HyzlYwjoXOQ\",\"children\":\"I gave Claude root access to my server... Model Context Protocol explained\"}]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"href\":\"https://www.latent.space/p/why-mcp-won\",\"children\":\"Why MCP Won\"}]}],\"\\n\",[\"$\",\"li\",null,{\"children\":[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"href\":\"https://www.youtube.com/watch?v=kQmXtrmQ5Zg\",\"children\":\"Building Agents with Model Context Protocol - Full Workshop with Mahesh Murag of Anthropic\"}]}],\"\\n\"]}],\"\\n\",[\"$\",\"hr\",null,{}],\"\\n\",[\"$\",\"p\",null,{\"children\":[\"If you have any questions, feedback, or ideas, please dm me on \",[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"href\":\"https://x.com/_philschmid\",\"children\":\"X\"}],\" or \",[\"$\",\"a\",null,{\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"href\":\"https://www.linkedin.com/in/philipp-schmid-a6a2bb196/\",\"children\":\"LinkedIn\"}],\". I am excited to hear about how you are experimenting and pushing the boundaries of AI agents.\"]}]]\n"])</script><script>self.__next_f.push([1,""])</script></body></html>